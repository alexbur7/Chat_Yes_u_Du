Index: app/src/main/res/layout/account_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\">\r\n    <include\r\n        android:id=\"@+id/toolbarFr\"\r\n        layout=\"@layout/toolbar\"/>\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <FrameLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\">\r\n        <ImageView\r\n            android:id=\"@+id/photo_view\"\r\n            android:layout_width=\"180dp\"\r\n            android:layout_height=\"180dp\"\r\n            android:layout_margin=\"16dp\"\r\n            android:scaleType=\"centerCrop\"\r\n            android:src=\"@drawable/unnamed\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/verified_image_account\"\r\n                android:layout_width=\"30dp\"\r\n                android:layout_height=\"25dp\"\r\n                android:layout_gravity=\"bottom|end\"\r\n                android:layout_marginRight=\"6dp\"\r\n                android:layout_marginBottom=\"11dp\"\r\n                android:src=\"@drawable/verified\"\r\n                android:visibility=\"invisible\" />\r\n        </FrameLayout>\r\n        <TextView\r\n            android:id=\"@+id/my_name_text\"\r\n            style=\"@android:style/TextAppearance.Large\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:textStyle=\"italic\" />\r\n    </LinearLayout>\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\">\r\n        <RelativeLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\">\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        style=\"?android:listSeparatorTextViewStyle\"\r\n        android:text=\"@string/gallery_text\"/>\r\n        <Button\r\n            android:id=\"@+id/look_all_button\"\r\n            style=\"@style/ButtonMain\"\r\n            android:layout_marginEnd=\"16dp\"\r\n            android:padding=\"6dp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"30dp\"\r\n            android:text=\"@string/look_all\"\r\n            android:textSize=\"12dp\"\r\n            android:textColor=\"@color/chat_text\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_marginRight=\"16dp\" />\r\n        </RelativeLayout>\r\n    </LinearLayout>\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:layout_marginTop=\"4dp\"\r\n        android:id=\"@+id/photo_recycler_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"100dp\"\r\n        android:scrollbars=\"horizontal\"/>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/text_recycler_view\"\r\n        android:layout_marginTop=\"12dp\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:scrollbars=\"vertical\"/>\r\n\r\n    <!--<com.google.android.gms.ads.AdView\r\n        android:id=\"@+id/adView\"\r\n        android:layout_marginTop=\"16dp\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_weight=\"1\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        ads:adSize=\"BANNER\"\r\n        ads:adUnitId=\"Раз раз раз\"/>!-->\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/account_fragment.xml	(revision 7bf02df8602033f2d692df4f0ba0bec4711f4b9c)
+++ app/src/main/res/layout/account_fragment.xml	(date 1609751228628)
@@ -47,11 +47,6 @@
         <RelativeLayout
             android:layout_width="wrap_content"
             android:layout_height="wrap_content">
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        style="?android:listSeparatorTextViewStyle"
-        android:text="@string/gallery_text"/>
         <Button
             android:id="@+id/look_all_button"
             style="@style/ButtonMain"
@@ -59,7 +54,7 @@
             android:padding="6dp"
             android:layout_width="wrap_content"
             android:layout_height="30dp"
-            android:text="@string/look_all"
+            android:text="@string/gallery_text"
             android:textSize="12dp"
             android:textColor="@color/chat_text"
             android:layout_alignParentRight="true"
Index: app/src/main/java/com/example/yesudu/chat_list/ChatRecViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.yesudu.chat_list;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport com.bumptech.glide.Glide;\r\nimport com.example.yesudu.R;\r\nimport com.example.yesudu.account.User;\r\nimport com.example.yesudu.account.UserAccountActivity;\r\nimport com.example.yesudu.chat.ChatActivity;\r\nimport com.example.yesudu.chat.ChatMessage;\r\nimport com.example.yesudu.chat_list.fragment.AdminPermBlockListFragment;\r\nimport com.example.yesudu.chat_list.fragment.AdminTimeBlockListFragment;\r\nimport com.example.yesudu.chat_list.fragment.BlockListFragment;\r\nimport com.example.yesudu.chat_list.fragment.ChatListFragment;\r\nimport com.example.yesudu.dialog.AcceptDialog;\r\nimport com.example.yesudu.dialog.CancelDialog;\r\nimport com.example.yesudu.dialog.DeleteChatDialog;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\npublic class ChatRecViewAdapter extends RecyclerView.Adapter<ChatRecViewAdapter.ChatHolder>{\r\n\r\n    private List<User> userList;\r\n    private Context context;\r\n    private FragmentManager fragmentManager;\r\n    private int viewType;\r\n    private String filtered;\r\n    private int type_dialog;\r\n\r\n    public ChatRecViewAdapter(List<User> list, Context context, FragmentManager manager,int viewType){\r\n        this.userList=list;\r\n        this.context=context;\r\n        this.fragmentManager=manager;\r\n        this.viewType=viewType;\r\n        this.filtered=\"none\";\r\n    }\r\n\r\n    public ChatRecViewAdapter(List<User> list, Context context, FragmentManager manager,int viewType,String filtered){\r\n        this.userList=list;\r\n        this.context=context;\r\n        this.fragmentManager=manager;\r\n        this.viewType=viewType;\r\n        this.filtered=filtered;\r\n    }\r\n\r\n    public ChatRecViewAdapter(List<User> list, Context context, FragmentManager manager,int viewType, int type_dialog){\r\n        this.userList=list;\r\n        this.context=context;\r\n        this.fragmentManager=manager;\r\n        this.viewType=viewType;\r\n        this.type_dialog = type_dialog;\r\n        this.filtered=\"none\";\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ChatRecViewAdapter.ChatHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View v;\r\n        if (filtered.equals(\"none\") && viewType!=AdminBanListHolder.VIEW_TYPE){\r\n            v = LayoutInflater.from(context).inflate(R.layout.users_list_item, parent, false);\r\n        }\r\n        else {\r\n            v = LayoutInflater.from(context).inflate(R.layout.users_filtered_list_item, parent, false);\r\n        }\r\n\r\n        switch (viewType) {\r\n            case ChatHolder.VIEW_TYPE: return new ChatRecViewAdapter.ChatHolder(v, context, fragmentManager);\r\n            case BlockListHolder.VIEW_TYPE: return new BlockListHolder(v,context,fragmentManager,type_dialog);\r\n            case AdminChatHolder.VIEW_TYPE: return new AdminChatHolder(v,context,fragmentManager);\r\n            case FavoriteListHolder.VIEW_TYPE:return new FavoriteListHolder(v,context,fragmentManager,type_dialog);\r\n            case AdminBanListHolder.VIEW_TYPE:return new AdminBanListHolder(v,context,fragmentManager,type_dialog);\r\n            default: throw new NullPointerException(\"HOLDER TYPE IS INVALID\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ChatHolder holder, int position) {\r\n        Log.e(\"users_inAdapter_id\",userList.get(position).getUuid());\r\n        holder.onBind(userList.get(position));\r\n        if (User.getCurrentUser()!=null && filtered.equals(\"none\") && viewType!=AdminBanListHolder.VIEW_TYPE) {\r\n            Log.d(\"if_bind\",\"here\");\r\n            holder.setLastMsg(holder.user.getUuid(), holder.userText);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        return viewType;\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return userList.size();\r\n    }\r\n\r\n\r\n    public static class ChatHolder extends RecyclerView.ViewHolder implements View.OnClickListener, View.OnLongClickListener {\r\n\r\n        public static final int VIEW_TYPE=0;\r\n\r\n        protected User user;\r\n        private TextView userName;\r\n        private TextView userDate;\r\n        private TextView userText;\r\n        private TextView userStatus;\r\n        private ImageView verifiedImage;\r\n        private CircleImageView photoImageView;\r\n        protected Context context;\r\n        protected FragmentManager fragmentManager;\r\n        private LinearLayout linearLayout;\r\n\r\n        public ChatHolder(@NonNull View itemView,Context context,FragmentManager manager) {\r\n            super(itemView);\r\n            linearLayout = itemView.findViewById(R.id.chat_list_item_layout);\r\n            this.context=context;\r\n            this.fragmentManager=manager;\r\n            userName = itemView.findViewById(R.id.user_name);\r\n            userDate = itemView.findViewById(R.id.user_date);\r\n            userText = itemView.findViewById(R.id.user_text);\r\n            userStatus = itemView.findViewById(R.id.text_online_list);\r\n            photoImageView = itemView.findViewById(R.id.circle_image_user);\r\n            verifiedImage = itemView.findViewById(R.id.verified_image_item);\r\n            itemView.setOnClickListener(this);\r\n            itemView.setOnLongClickListener(this);\r\n        }\r\n\r\n        protected String generateKey(String receiverUuid){\r\n            ArrayList<String> templist=new ArrayList<>();\r\n            templist.add(User.getCurrentUser().getUuid());\r\n            templist.add(receiverUuid);\r\n            Collections.sort(templist);\r\n            String firstKey=templist.get(0);\r\n            return firstKey;\r\n        }\r\n\r\n        public void setLastMsg(String id, TextView view){\r\n            FirebaseDatabase.getInstance().getReference(\"chats\").addValueEventListener(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                    for (DataSnapshot snapshot1:snapshot.getChildren())\r\n                        for (DataSnapshot snapshot2:snapshot1.getChildren()){\r\n                            if (!snapshot2.getKey().equals(\"firstBlock\") && !snapshot2.getKey().equals(\"secondBlock\")) {\r\n                                for (DataSnapshot snapshot3 : snapshot2.getChildren()) {\r\n                                    ChatMessage message = snapshot3.getValue(ChatMessage.class);\r\n                                    //если я первый\r\n                                    if (User.getCurrentUser().getUuid().equals(generateKey(id))) {\r\n                                        if ((message.getToUserUUID().equals(User.getCurrentUser().getUuid()) && message.getFromUserUUID().equals(id) ||\r\n                                                message.getToUserUUID().equals(id) && message.getFromUserUUID().equals(User.getCurrentUser().getUuid()))\r\n                                        ) {\r\n                                            if (message.getFirstDelete().equals(\"delete\")){\r\n                                                view.setText(\"\");\r\n                                            }\r\n                                            else {\r\n                                                view.setText(message.getMessageText());\r\n                                            }\r\n                                            if(message.getSecondKey().equals(context.getString(R.string.not_seen_text))){\r\n                                                linearLayout.setBackgroundResource(R.color.no_seen);\r\n                                            }\r\n                                            if(message.getSecondKey().equals(context.getString(R.string.seen_text)) || message.getFirstKey().equals(context.getString(R.string.seen_text))) linearLayout.setBackgroundColor(Color.WHITE);\r\n                                        }\r\n                                    } else {\r\n                                        if ((message.getToUserUUID().equals(User.getCurrentUser().getUuid()) && message.getFromUserUUID().equals(id) ||\r\n                                                message.getToUserUUID().equals(id) && message.getFromUserUUID().equals(User.getCurrentUser().getUuid())) ) {\r\n                                            if (message.getSecondDelete().equals(\"delete\")){\r\n                                                view.setText(\"\");\r\n                                            }\r\n                                            else\r\n                                                view.setText(message.getMessageText());\r\n                                            if(message.getFirstKey().equals(context.getString(R.string.not_seen_text))){\r\n                                                linearLayout.setBackgroundResource(R.color.no_seen);\r\n                                            }\r\n                                            if(message.getSecondKey().equals(context.getString(R.string.seen_text)) || message.getFirstKey().equals(context.getString(R.string.seen_text))) linearLayout.setBackgroundColor(Color.WHITE);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        void onBind(User user){\r\n            this.user=user;\r\n            userName.setText(user.getName());\r\n            if (user.getPhoto_url().equals(\"default\")){\r\n                photoImageView.setImageResource(R.drawable.unnamed);\r\n            }\r\n            else{\r\n                Glide.with(context).load(user.getPhoto_url()).into(photoImageView);\r\n            }\r\n            if (user.getStatus().equals(context.getResources().getString(R.string.label_online))){\r\n                userStatus.setText(context.getResources().getString(R.string.label_online));\r\n            }\r\n            else userStatus.setText(context.getResources().getString(R.string.label_offline));\r\n            if (user.getVerified().equals(\"yes\")){\r\n                verifiedImage.setVisibility(View.VISIBLE);\r\n            }\r\n            else verifiedImage.setVisibility(View.INVISIBLE);\r\n        }\r\n\r\n        @Override\r\n        public void onClick(View view) {\r\n            Intent intent = ChatActivity.newIntent(context, user.getUuid(), user.getPhoto_url(), VIEW_TYPE);\r\n            context.startActivity(intent);\r\n        }\r\n\r\n        @Override\r\n        public boolean onLongClick(View v) {\r\n            return false;\r\n        }\r\n\r\n        /*@Override\r\n        public boolean onLongClick(View v) {\r\n            if (userText!=null) {\r\n                DeleteChatDialog deleteChatDialog = new DeleteChatDialog(user.getUuid(), userText.getText().toString().isEmpty());\r\n                Fragment fragment = fragmentManager.findFragmentById(R.id.fragment_container);\r\n                deleteChatDialog.setTargetFragment(fragment, ChatListFragment.KEY_DELETE_DIAOG);\r\n                deleteChatDialog.show(fragmentManager, null);\r\n            }\r\n            return true;\r\n        }*/\r\n    }\r\n\r\n    public static class AdminChatHolder extends ChatRecViewAdapter.ChatHolder{\r\n\r\n        public static final int VIEW_TYPE=2;\r\n\r\n        public AdminChatHolder(@NonNull View itemView, Context context, FragmentManager manager) {\r\n            super(itemView, context, manager);\r\n        }\r\n\r\n        @Override\r\n        public void onClick(View view) {\r\n            Intent intent = ChatActivity.newIntent(context, user.getUuid(), user.getPhoto_url(),VIEW_TYPE);\r\n            context.startActivity(intent);\r\n        }\r\n\r\n        @Override\r\n        public void setLastMsg(String id, TextView view) {\r\n            FirebaseDatabase.getInstance().getReference(\"chats\").addValueEventListener(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                    for (DataSnapshot snapshot1:snapshot.getChildren())\r\n                        for (DataSnapshot snapshot2:snapshot1.getChildren()){\r\n                            if (!snapshot2.getKey().equals(\"firstBlock\") && !snapshot2.getKey().equals(\"secondBlock\")) {\r\n                                for (DataSnapshot snapshot3 : snapshot2.getChildren()) {\r\n                                    ChatMessage message = snapshot3.getValue(ChatMessage.class);\r\n                                    //если я первый\r\n                                    if (context.getResources().getString(R.string.admin_key).equals(generateKey(id))) {\r\n                                        if ((message.getToUserUUID().equals(context.getResources().getString(R.string.admin_key)) && message.getFromUserUUID().equals(id) ||\r\n                                                message.getToUserUUID().equals(id) && message.getFromUserUUID().equals(context.getResources().getString(R.string.admin_key)))) {\r\n                                            if (message.getFirstDelete().equals(\"delete\")){\r\n                                                view.setText(\"\");\r\n                                            }\r\n                                            else\r\n                                                view.setText(message.getMessageText());\r\n                                        }\r\n                                    } else {\r\n                                        if ((message.getToUserUUID().equals(context.getResources().getString(R.string.admin_key)) && message.getFromUserUUID().equals(id) ||\r\n                                                message.getToUserUUID().equals(id) && message.getFromUserUUID().equals(context.getResources().getString(R.string.admin_key))) ) {\r\n                                            if (message.getSecondDelete().equals(\"delete\")){\r\n                                                view.setText(\"\");\r\n                                            }\r\n                                            else\r\n                                                view.setText(message.getMessageText());\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        @Override\r\n        protected String generateKey(String receiverUuid) {\r\n            ArrayList<String> templist=new ArrayList<>();\r\n            templist.add(context.getResources().getString(R.string.admin_key));\r\n            templist.add(receiverUuid);\r\n            Collections.sort(templist);\r\n            String firstKey=templist.get(0);\r\n            return firstKey;\r\n        }\r\n    }\r\n\r\n    public static class BlockListHolder extends ChatRecViewAdapter.ChatHolder{\r\n        public static final int VIEW_TYPE=1;\r\n        private int type_dialog;\r\n\r\n        public BlockListHolder(@NonNull View itemView, Context context, FragmentManager manager, int type_dialog) {\r\n            super(itemView, context, manager);\r\n            this.type_dialog = type_dialog;\r\n        }\r\n\r\n        @Override\r\n        public boolean onLongClick(View v) {\r\n            CancelDialog dialog=new CancelDialog(user.getUuid(),type_dialog);\r\n            Fragment fragment= fragmentManager.findFragmentById(R.id.fragment_container);\r\n            dialog.setTargetFragment(fragment, BlockListFragment.KEY_TO_UNBLOCK);\r\n            dialog.show(fragmentManager,null);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public static class FavoriteListHolder extends ChatRecViewAdapter.ChatHolder{\r\n        public static final int VIEW_TYPE=3;\r\n        private int type_dialog;\r\n\r\n        public FavoriteListHolder(@NonNull View itemView, Context context, FragmentManager manager, int type_dialog) {\r\n            super(itemView, context, manager);\r\n            this.type_dialog = type_dialog;\r\n        }\r\n\r\n        @Override\r\n        public boolean onLongClick(View v) {\r\n            CancelDialog dialog=new CancelDialog(user.getUuid(),type_dialog);\r\n            Fragment fragment= fragmentManager.findFragmentById(R.id.fragment_container);\r\n            dialog.setTargetFragment(fragment,BlockListFragment.KEY_TO_UNBLOCK);\r\n            dialog.show(fragmentManager,null);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public static class AdminBanListHolder extends ChatRecViewAdapter.ChatHolder {\r\n        public static final int VIEW_TYPE=4;\r\n        private int list_type;\r\n        //private DatabaseReference mReference;\r\n\r\n        public AdminBanListHolder(@NonNull View itemView, Context context, FragmentManager manager,int list_type) {\r\n            super(itemView, context, manager);\r\n            this.list_type=list_type;\r\n            //Log.d(\"holder_userID\",user.getUuid());\r\n            //mReference=FirebaseDatabase.getInstance().getReference(\"users\").child(user.getUuid());\r\n        }\r\n\r\n        @Override\r\n        public boolean onLongClick(View v) {\r\n            return false;\r\n        }\r\n\r\n        @Override\r\n        public void onClick(View view) {\r\n            Intent intent= UserAccountActivity.newIntent(context,user.getUuid());\r\n            FragmentActivity activity= (FragmentActivity) context;\r\n            context.startActivity(intent);\r\n            activity.finish();\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/yesudu/chat_list/ChatRecViewAdapter.java	(revision 7bf02df8602033f2d692df4f0ba0bec4711f4b9c)
+++ app/src/main/java/com/example/yesudu/chat_list/ChatRecViewAdapter.java	(date 1608756107828)
@@ -379,5 +379,4 @@
             activity.finish();
         }
     }
-
 }
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n    dependencies {\r\n        classpath \"com.android.tools.build:gradle:4.0.1\"\r\n        classpath 'com.google.gms:google-services:4.3.3'\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision 7bf02df8602033f2d692df4f0ba0bec4711f4b9c)
+++ build.gradle	(date 1609751120322)
@@ -5,7 +5,7 @@
         jcenter()
     }
     dependencies {
-        classpath "com.android.tools.build:gradle:4.0.1"
+        classpath 'com.android.tools.build:gradle:4.1.1'
         classpath 'com.google.gms:google-services:4.3.3'
 
         // NOTE: Do not place your application dependencies here; they belong
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Sun Oct 11 09:52:21 MSK 2020\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.1.1-all.zip\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision 7bf02df8602033f2d692df4f0ba0bec4711f4b9c)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1609751120392)
@@ -1,6 +1,6 @@
-#Sun Oct 11 09:52:21 MSK 2020
+#Mon Jan 04 12:05:20 MSK 2021
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.1.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-bin.zip
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 7bf02df8602033f2d692df4f0ba0bec4711f4b9c)
+++ .idea/misc.xml	(date 1609750951089)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(date 1609750951125)
+++ .idea/compiler.xml	(date 1609750951125)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="1.8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 7bf02df8602033f2d692df4f0ba0bec4711f4b9c)
+++ .idea/gradle.xml	(date 1609750903052)
@@ -15,6 +15,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
