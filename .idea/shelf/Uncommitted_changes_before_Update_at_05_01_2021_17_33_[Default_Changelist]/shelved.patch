Index: app/src/main/java/com/example/yesudu/chat_list/ChatRecViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.yesudu.chat_list;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport com.bumptech.glide.Glide;\r\nimport com.example.yesudu.R;\r\nimport com.example.yesudu.account.User;\r\nimport com.example.yesudu.account.UserAccountActivity;\r\nimport com.example.yesudu.chat.ChatActivity;\r\nimport com.example.yesudu.chat.ChatMessage;\r\nimport com.example.yesudu.chat_list.fragment.BlockListFragment;\r\nimport com.example.yesudu.dialog.CancelDialog;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\npublic class ChatRecViewAdapter extends RecyclerView.Adapter<ChatRecViewAdapter.ChatHolder>{\r\n\r\n    private List<User> userList;\r\n    private Context context;\r\n    private FragmentManager fragmentManager;\r\n    private int viewType;\r\n    private String filtered;\r\n    private int type_dialog;\r\n\r\n    public ChatRecViewAdapter(List<User> list, Context context, FragmentManager manager,int viewType){\r\n        this.userList=list;\r\n        this.context=context;\r\n        this.fragmentManager=manager;\r\n        this.viewType=viewType;\r\n        this.filtered=\"none\";\r\n    }\r\n\r\n    public ChatRecViewAdapter(List<User> list, Context context, FragmentManager manager,int viewType,String filtered){\r\n        this.userList=list;\r\n        this.context=context;\r\n        this.fragmentManager=manager;\r\n        this.viewType=viewType;\r\n        this.filtered=filtered;\r\n    }\r\n\r\n    public ChatRecViewAdapter(List<User> list, Context context, FragmentManager manager,int viewType, int type_dialog){\r\n        this.userList=list;\r\n        this.context=context;\r\n        this.fragmentManager=manager;\r\n        this.viewType=viewType;\r\n        this.type_dialog = type_dialog;\r\n        this.filtered=\"none\";\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ChatRecViewAdapter.ChatHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View v;\r\n        if (filtered.equals(\"none\") && viewType!=AdminBanListHolder.VIEW_TYPE){\r\n            v = LayoutInflater.from(context).inflate(R.layout.users_list_item, parent, false);\r\n        }\r\n        else {\r\n            v = LayoutInflater.from(context).inflate(R.layout.users_filtered_list_item, parent, false);\r\n        }\r\n\r\n        switch (viewType) {\r\n            case ChatHolder.VIEW_TYPE: return new ChatRecViewAdapter.ChatHolder(v, context, fragmentManager);\r\n            case BlockListHolder.VIEW_TYPE: return new BlockListHolder(v,context,fragmentManager,type_dialog);\r\n            case AdminChatHolder.VIEW_TYPE: return new AdminChatHolder(v,context,fragmentManager);\r\n            case FavoriteListHolder.VIEW_TYPE:return new FavoriteListHolder(v,context,fragmentManager,type_dialog);\r\n            case AdminBanListHolder.VIEW_TYPE:return new AdminBanListHolder(v,context,fragmentManager,type_dialog);\r\n            default: throw new NullPointerException(\"HOLDER TYPE IS INVALID\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ChatHolder holder, int position) {\r\n        Log.e(\"users_inAdapter_id\",userList.get(position).getUuid());\r\n        holder.onBind(userList.get(position));\r\n        if (User.getCurrentUser()!=null && filtered.equals(\"none\") && viewType!=AdminBanListHolder.VIEW_TYPE) {\r\n            Log.d(\"if_bind\",\"here\");\r\n            holder.setLastMsg(holder.user.getUuid(), holder.userText);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        return viewType;\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return userList.size();\r\n    }\r\n\r\n\r\n    public static class ChatHolder extends RecyclerView.ViewHolder implements View.OnClickListener, View.OnLongClickListener {\r\n\r\n        public static final int VIEW_TYPE=0;\r\n\r\n        protected User user;\r\n        private TextView userName;\r\n        private TextView userDate;\r\n        private TextView userText;\r\n        private TextView userStatus;\r\n        private ImageView verifiedImage;\r\n        private CircleImageView photoImageView;\r\n        protected Context context;\r\n        protected FragmentManager fragmentManager;\r\n        private LinearLayout linearLayout;\r\n\r\n        public ChatHolder(@NonNull View itemView,Context context,FragmentManager manager) {\r\n            super(itemView);\r\n            linearLayout = itemView.findViewById(R.id.chat_list_item_layout);\r\n            this.context=context;\r\n            this.fragmentManager=manager;\r\n            userName = itemView.findViewById(R.id.user_name);\r\n            userDate = itemView.findViewById(R.id.user_date);\r\n            userText = itemView.findViewById(R.id.user_text);\r\n            userStatus = itemView.findViewById(R.id.text_online_list);\r\n            photoImageView = itemView.findViewById(R.id.circle_image_user);\r\n            verifiedImage = itemView.findViewById(R.id.verified_image_item);\r\n            itemView.setOnClickListener(this);\r\n            itemView.setOnLongClickListener(this);\r\n        }\r\n\r\n        protected String generateKey(String receiverUuid){\r\n            ArrayList<String> templist=new ArrayList<>();\r\n            templist.add(User.getCurrentUser().getUuid());\r\n            templist.add(receiverUuid);\r\n            Collections.sort(templist);\r\n            String firstKey=templist.get(0);\r\n            return firstKey;\r\n        }\r\n\r\n        public void setLastMsg(String id, TextView view){\r\n            FirebaseDatabase.getInstance().getReference(\"chats\").addValueEventListener(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                    for (DataSnapshot snapshot1:snapshot.getChildren())\r\n                        for (DataSnapshot snapshot2:snapshot1.getChildren()){\r\n                            if (!snapshot2.getKey().equals(\"firstBlock\") && !snapshot2.getKey().equals(\"secondBlock\")) {\r\n                                for (DataSnapshot snapshot3 : snapshot2.getChildren()) {\r\n                                    ChatMessage message = snapshot3.getValue(ChatMessage.class);\r\n                                    //если я первый\r\n                                    if (User.getCurrentUser().getUuid().equals(generateKey(id))) {\r\n                                        if ((message.getToUserUUID().equals(User.getCurrentUser().getUuid()) && message.getFromUserUUID().equals(id) ||\r\n                                                message.getToUserUUID().equals(id) && message.getFromUserUUID().equals(User.getCurrentUser().getUuid()))\r\n                                        ) {\r\n                                            if (message.getFirstDelete().equals(\"delete\")){\r\n                                                view.setText(\"\");\r\n                                            }\r\n                                            else {\r\n                                                view.setText(message.getMessageText());\r\n                                            }\r\n                                            if(message.getSecondSeen().equals(context.getString(R.string.not_seen_text))){\r\n                                                linearLayout.setBackgroundResource(R.color.no_seen);\r\n                                            }\r\n                                            if(message.getSecondSeen().equals(context.getString(R.string.seen_text)) || message.getFirstSeen().equals(context.getString(R.string.seen_text))) linearLayout.setBackgroundColor(Color.WHITE);\r\n                                        }\r\n                                    } else {\r\n                                        if ((message.getToUserUUID().equals(User.getCurrentUser().getUuid()) && message.getFromUserUUID().equals(id) ||\r\n                                                message.getToUserUUID().equals(id) && message.getFromUserUUID().equals(User.getCurrentUser().getUuid())) ) {\r\n                                            if (message.getSecondDelete().equals(\"delete\")){\r\n                                                view.setText(\"\");\r\n                                            }\r\n                                            else\r\n                                                view.setText(message.getMessageText());\r\n                                            if(message.getFirstSeen().equals(context.getString(R.string.not_seen_text))){\r\n                                                //TODO здесь красится лейаут\r\n                                                linearLayout.setBackgroundResource(R.color.no_seen);\r\n                                            }\r\n                                            if(message.getSecondSeen().equals(context.getString(R.string.seen_text)) || message.getFirstSeen().equals(context.getString(R.string.seen_text))) linearLayout.setBackgroundColor(Color.WHITE);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        void onBind(User user){\r\n            this.user=user;\r\n            userName.setText(user.getName());\r\n            if (user.getPhoto_url().equals(\"default\")){\r\n                photoImageView.setImageResource(R.drawable.unnamed);\r\n            }\r\n            else{\r\n                Glide.with(context).load(user.getPhoto_url()).into(photoImageView);\r\n            }\r\n            if (user.getStatus().equals(context.getResources().getString(R.string.label_online))){\r\n                userStatus.setText(context.getResources().getString(R.string.label_online));\r\n            }\r\n            else userStatus.setText(context.getResources().getString(R.string.label_offline));\r\n            if (user.getVerified().equals(\"yes\")){\r\n                verifiedImage.setVisibility(View.VISIBLE);\r\n            }\r\n            else verifiedImage.setVisibility(View.INVISIBLE);\r\n        }\r\n\r\n        @Override\r\n        public void onClick(View view) {\r\n            Intent intent = ChatActivity.newIntent(context, user.getUuid(), user.getPhoto_url(), VIEW_TYPE);\r\n            context.startActivity(intent);\r\n        }\r\n\r\n        @Override\r\n        public boolean onLongClick(View v) {\r\n            return false;\r\n        }\r\n\r\n        /*@Override\r\n        public boolean onLongClick(View v) {\r\n            if (userText!=null) {\r\n                DeleteChatDialog deleteChatDialog = new DeleteChatDialog(user.getUuid(), userText.getText().toString().isEmpty());\r\n                Fragment fragment = fragmentManager.findFragmentById(R.id.fragment_container);\r\n                deleteChatDialog.setTargetFragment(fragment, ChatListFragment.KEY_DELETE_DIAOG);\r\n                deleteChatDialog.show(fragmentManager, null);\r\n            }\r\n            return true;\r\n        }*/\r\n    }\r\n\r\n    public static class AdminChatHolder extends ChatRecViewAdapter.ChatHolder{\r\n\r\n        public static final int VIEW_TYPE=2;\r\n\r\n        public AdminChatHolder(@NonNull View itemView, Context context, FragmentManager manager) {\r\n            super(itemView, context, manager);\r\n        }\r\n\r\n        @Override\r\n        public void onClick(View view) {\r\n            Intent intent = ChatActivity.newIntent(context, user.getUuid(), user.getPhoto_url(),VIEW_TYPE);\r\n            context.startActivity(intent);\r\n        }\r\n\r\n        @Override\r\n        public void setLastMsg(String id, TextView view) {\r\n            FirebaseDatabase.getInstance().getReference(\"chats\").addValueEventListener(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                    for (DataSnapshot snapshot1:snapshot.getChildren())\r\n                        for (DataSnapshot snapshot2:snapshot1.getChildren()){\r\n                            if (!snapshot2.getKey().equals(\"firstBlock\") && !snapshot2.getKey().equals(\"secondBlock\")) {\r\n                                for (DataSnapshot snapshot3 : snapshot2.getChildren()) {\r\n                                    ChatMessage message = snapshot3.getValue(ChatMessage.class);\r\n                                    //если я первый\r\n                                    if (context.getResources().getString(R.string.admin_key).equals(generateKey(id))) {\r\n                                        if ((message.getToUserUUID().equals(context.getResources().getString(R.string.admin_key)) && message.getFromUserUUID().equals(id) ||\r\n                                                message.getToUserUUID().equals(id) && message.getFromUserUUID().equals(context.getResources().getString(R.string.admin_key)))) {\r\n                                            if (message.getFirstDelete().equals(\"delete\")){\r\n                                                view.setText(\"\");\r\n                                            }\r\n                                            else\r\n                                                view.setText(message.getMessageText());\r\n                                        }\r\n                                    } else {\r\n                                        if ((message.getToUserUUID().equals(context.getResources().getString(R.string.admin_key)) && message.getFromUserUUID().equals(id) ||\r\n                                                message.getToUserUUID().equals(id) && message.getFromUserUUID().equals(context.getResources().getString(R.string.admin_key))) ) {\r\n                                            if (message.getSecondDelete().equals(\"delete\")){\r\n                                                view.setText(\"\");\r\n                                            }\r\n                                            else\r\n                                                view.setText(message.getMessageText());\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        @Override\r\n        protected String generateKey(String receiverUuid) {\r\n            ArrayList<String> templist=new ArrayList<>();\r\n            templist.add(context.getResources().getString(R.string.admin_key));\r\n            templist.add(receiverUuid);\r\n            Collections.sort(templist);\r\n            String firstKey=templist.get(0);\r\n            return firstKey;\r\n        }\r\n    }\r\n\r\n    public static class BlockListHolder extends ChatRecViewAdapter.ChatHolder{\r\n        public static final int VIEW_TYPE=1;\r\n        private int type_dialog;\r\n\r\n        public BlockListHolder(@NonNull View itemView, Context context, FragmentManager manager, int type_dialog) {\r\n            super(itemView, context, manager);\r\n            this.type_dialog = type_dialog;\r\n        }\r\n\r\n        @Override\r\n        public boolean onLongClick(View v) {\r\n            CancelDialog dialog=new CancelDialog(user.getUuid(),type_dialog);\r\n            Fragment fragment= fragmentManager.findFragmentById(R.id.fragment_container);\r\n            dialog.setTargetFragment(fragment, BlockListFragment.KEY_TO_UNBLOCK);\r\n            dialog.show(fragmentManager,null);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public static class FavoriteListHolder extends ChatRecViewAdapter.ChatHolder{\r\n        public static final int VIEW_TYPE=3;\r\n        private int type_dialog;\r\n\r\n        public FavoriteListHolder(@NonNull View itemView, Context context, FragmentManager manager, int type_dialog) {\r\n            super(itemView, context, manager);\r\n            this.type_dialog = type_dialog;\r\n        }\r\n\r\n        @Override\r\n        public boolean onLongClick(View v) {\r\n            CancelDialog dialog=new CancelDialog(user.getUuid(),type_dialog);\r\n            Fragment fragment= fragmentManager.findFragmentById(R.id.fragment_container);\r\n            dialog.setTargetFragment(fragment,BlockListFragment.KEY_TO_UNBLOCK);\r\n            dialog.show(fragmentManager,null);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public static class AdminBanListHolder extends ChatRecViewAdapter.ChatHolder {\r\n        public static final int VIEW_TYPE=4;\r\n        private int list_type;\r\n        //private DatabaseReference mReference;\r\n\r\n        public AdminBanListHolder(@NonNull View itemView, Context context, FragmentManager manager,int list_type) {\r\n            super(itemView, context, manager);\r\n            this.list_type=list_type;\r\n            //Log.d(\"holder_userID\",user.getUuid());\r\n            //mReference=FirebaseDatabase.getInstance().getReference(\"users\").child(user.getUuid());\r\n        }\r\n\r\n        @Override\r\n        public boolean onLongClick(View v) {\r\n            return false;\r\n        }\r\n\r\n        @Override\r\n        public void onClick(View view) {\r\n            Intent intent= UserAccountActivity.newIntent(context,user.getUuid());\r\n            FragmentActivity activity= (FragmentActivity) context;\r\n            context.startActivity(intent);\r\n            activity.finish();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/yesudu/chat_list/ChatRecViewAdapter.java	(revision 697d434c686da1b93740acf19dc89a5a40324a19)
+++ app/src/main/java/com/example/yesudu/chat_list/ChatRecViewAdapter.java	(date 1609856416022)
@@ -10,6 +10,8 @@
 import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.TextView;
+import android.widget.Toast;
+
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentActivity;
@@ -22,6 +24,7 @@
 import com.example.yesudu.chat.ChatActivity;
 import com.example.yesudu.chat.ChatMessage;
 import com.example.yesudu.chat_list.fragment.BlockListFragment;
+import com.example.yesudu.chat_list.fragment.FilteredChatListFragment;
 import com.example.yesudu.dialog.CancelDialog;
 import com.google.firebase.database.DataSnapshot;
 import com.google.firebase.database.DatabaseError;
@@ -79,7 +82,7 @@
         }
 
         switch (viewType) {
-            case ChatHolder.VIEW_TYPE: return new ChatRecViewAdapter.ChatHolder(v, context, fragmentManager);
+            case ChatHolder.VIEW_TYPE: return new ChatRecViewAdapter.ChatHolder(v, context, fragmentManager,filtered);
             case BlockListHolder.VIEW_TYPE: return new BlockListHolder(v,context,fragmentManager,type_dialog);
             case AdminChatHolder.VIEW_TYPE: return new AdminChatHolder(v,context,fragmentManager);
             case FavoriteListHolder.VIEW_TYPE:return new FavoriteListHolder(v,context,fragmentManager,type_dialog);
@@ -123,12 +126,14 @@
         protected Context context;
         protected FragmentManager fragmentManager;
         private LinearLayout linearLayout;
+        private String filtered;
 
-        public ChatHolder(@NonNull View itemView,Context context,FragmentManager manager) {
+        public ChatHolder(@NonNull View itemView, Context context, FragmentManager manager, String filtered) {
             super(itemView);
             linearLayout = itemView.findViewById(R.id.chat_list_item_layout);
             this.context=context;
             this.fragmentManager=manager;
+            this.filtered=filtered;
             userName = itemView.findViewById(R.id.user_name);
             userDate = itemView.findViewById(R.id.user_date);
             userText = itemView.findViewById(R.id.user_text);
@@ -204,6 +209,13 @@
         void onBind(User user){
             this.user=user;
             userName.setText(user.getName());
+            if (filtered.equals(FilteredChatListFragment.FILTER_VIEW_TYPE)) {
+                if (user.getPerm_block().equals("block")) {
+                    setBlockedListeners(context.getString(R.string.perm_blocked_by_admin_on_chatlist_title));
+                } else if (user.getAdmin_block().equals("block")) {
+                    setBlockedListeners(context.getString(R.string.blocked_by_admin_on_chatlist_title));
+                }
+            }
             if (user.getPhoto_url().equals("default")){
                 photoImageView.setImageResource(R.drawable.unnamed);
             }
@@ -220,6 +232,15 @@
             else verifiedImage.setVisibility(View.INVISIBLE);
         }
 
+        private void setBlockedListeners(String text){
+            itemView.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    Toast.makeText(context,text,Toast.LENGTH_SHORT).show();
+                }
+            });
+        }
+
         @Override
         public void onClick(View view) {
             Intent intent = ChatActivity.newIntent(context, user.getUuid(), user.getPhoto_url(), VIEW_TYPE);
@@ -248,7 +269,7 @@
         public static final int VIEW_TYPE=2;
 
         public AdminChatHolder(@NonNull View itemView, Context context, FragmentManager manager) {
-            super(itemView, context, manager);
+            super(itemView, context, manager, "none");
         }
 
         @Override
@@ -316,7 +337,7 @@
         private int type_dialog;
 
         public BlockListHolder(@NonNull View itemView, Context context, FragmentManager manager, int type_dialog) {
-            super(itemView, context, manager);
+            super(itemView, context, manager, "none");
             this.type_dialog = type_dialog;
         }
 
@@ -335,7 +356,7 @@
         private int type_dialog;
 
         public FavoriteListHolder(@NonNull View itemView, Context context, FragmentManager manager, int type_dialog) {
-            super(itemView, context, manager);
+            super(itemView, context, manager, "none");
             this.type_dialog = type_dialog;
         }
 
@@ -355,7 +376,7 @@
         //private DatabaseReference mReference;
 
         public AdminBanListHolder(@NonNull View itemView, Context context, FragmentManager manager,int list_type) {
-            super(itemView, context, manager);
+            super(itemView, context, manager, "none");
             this.list_type=list_type;
             //Log.d("holder_userID",user.getUuid());
             //mReference=FirebaseDatabase.getInstance().getReference("users").child(user.getUuid());
Index: app/src/main/java/com/example/yesudu/chat_list/fragment/FilteredChatListFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.yesudu.chat_list.fragment;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\n\r\nimport com.example.yesudu.dialog.FilterDialog;\r\nimport com.example.yesudu.R;\r\nimport com.example.yesudu.account.User;\r\nimport com.example.yesudu.chat_list.ChatRecViewAdapter;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport java.util.ArrayList;\r\n\r\npublic class FilteredChatListFragment extends ChatListFragment {\r\n\r\n    public static final String KEY_TO_INTENT_DATA=\"key_to_data\";\r\n    public static final String FILTER_VIEW_TYPE = \"filter_view\";\r\n    private static final String TYPE_HOLDER = \"type_holder\";\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        return super.onCreateView(inflater, container, savedInstanceState);\r\n    }\r\n\r\n\r\n    @Override\r\n    void setLayoutManagerForRecView() {\r\n        chatRecView.setLayoutManager(new GridLayoutManager(getActivity(),3));\r\n    }\r\n\r\n    @Override\r\n    protected void setUsersFromChats(ArrayList<String> usersWithMsgId) { }\r\n\r\n    @Override\r\n    protected void setChats() {\r\n        getFilterInfoAndFilter(getArguments().getParcelable(KEY_TO_INTENT_DATA));\r\n    }\r\n\r\n    private void getFilterInfoAndFilter(Intent data) {\r\n        String nameFilter=data.getStringExtra(FilterDialog.KEY_TO_NAME_FILTER);\r\n        String sexFilter=data.getStringExtra(FilterDialog.KEY_TO_SEX_FILTER);\r\n        String ageFilter=data.getStringExtra(FilterDialog.KEY_TO_AGE_FILTER);\r\n        String cityFilter=data.getStringExtra(FilterDialog.KEY_TO_CITY_FILTER);\r\n        String onlineFilter=data.getStringExtra(FilterDialog.KEY_TO_ONLINE_FILTER);\r\n        String photoFilter=data.getStringExtra(FilterDialog.KEY_TO_PHOTO_FILTER);\r\n        String countryFilter=data.getStringExtra(FilterDialog.KEY_TO_COUNTRY_FILTER);\r\n        String regionFilter=data.getStringExtra(FilterDialog.KEY_TO_REGION_FILTER);\r\n        filterUsers(nameFilter,sexFilter,ageFilter,cityFilter,onlineFilter,photoFilter,countryFilter,regionFilter);\r\n    }\r\n\r\n    private void filterUsers(String nameFilter, String sexFilter, String ageFilter, String cityFilter, String onlineFilter, String photoFilter, String countryFilter, String regionFilter){\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"users\");\r\n        ref.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                ArrayList<User> users = new ArrayList<>();\r\n                users.clear();\r\n                for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                    User user = snapshot1.getValue(User.class);\r\n                    user.setUuid(snapshot1.getKey());\r\n                    users.add(user);\r\n                    filterUsersByName(users, user);\r\n                    filterUserBySex(users, user);\r\n                    filterUsersByAge(users, user);\r\n                    filterUsersByCity(users, user);\r\n                    filterUsersByOnline(users, user);\r\n                    filterUsersByCountry(users,user);\r\n                    filterUsersByRegion(users,user);\r\n                    //filterUsersByPhoto(users,user);\r\n                }\r\n\r\n                ChatRecViewAdapter adapter = new ChatRecViewAdapter(users,getActivity(),getFragmentManager(),ChatRecViewAdapter.ChatHolder.VIEW_TYPE,FILTER_VIEW_TYPE);\r\n                chatRecView.setAdapter(adapter);\r\n                ref.removeEventListener(this);\r\n            }\r\n\r\n            private void filterUsersByRegion(ArrayList<User> users, User user) {\r\n                if (!regionFilter.equals(\"0\")){\r\n                    if (!user.getRegion().equals(regionFilter)){\r\n                        users.remove(user);\r\n                    }\r\n                }\r\n            }\r\n\r\n            private void filterUsersByCountry(ArrayList<User> users, User user) {\r\n                if (!countryFilter.equals(\"0\")){\r\n                    if (!user.getCountry().equals(countryFilter)){\r\n                        users.remove(user);\r\n                    }\r\n                }\r\n            }\r\n\r\n            private void filterUsersByPhoto(ArrayList<User> users, User user){\r\n                if (!photoFilter.isEmpty()){\r\n                    if (user.getPhoto_url().equals(\"default\")){\r\n                        users.remove(user);\r\n                    }\r\n                }\r\n            }\r\n\r\n            private void filterUsersByOnline(ArrayList<User> users, User user) {\r\n                if (!onlineFilter.isEmpty()) {\r\n                    if (!(user.getStatus().equals(onlineFilter))) {\r\n                        users.remove(user);\r\n                    }\r\n                }\r\n            }\r\n\r\n            private void filterUsersByCity(ArrayList<User> users, User user) {\r\n                if (!(cityFilter.isEmpty())){\r\n                    if (!user.getCity().equals(cityFilter)) {\r\n                        users.remove(user);\r\n                    }\r\n                }\r\n            }\r\n\r\n            private void filterUsersByAge(ArrayList<User> users, User user) {\r\n                if (ageFilter != null) {\r\n                    if (ageFilter.equals(getResources().getStringArray(R.array.age_for_spinner)[0]) && !(Integer.parseInt(user.getAge()) < 18)) {\r\n                        users.remove(user);\r\n                    } else if (ageFilter.equals(getResources().getStringArray(R.array.age_for_spinner)[1]) && !(Integer.parseInt(user.getAge()) >= 18 && Integer.parseInt(user.getAge()) < 30)) {\r\n                        users.remove(user);\r\n                    } else if (ageFilter.equals(getResources().getStringArray(R.array.age_for_spinner)[2]) && !(Integer.parseInt(user.getAge()) >= 30 && Integer.parseInt(user.getAge()) < 45)) {\r\n                        users.remove(user);\r\n                    } else if (ageFilter.equals(getResources().getStringArray(R.array.age_for_spinner)[3]) && !(Integer.parseInt(user.getAge()) >= 45 && Integer.parseInt(user.getAge()) < 60)) {\r\n                        users.remove(user);\r\n                    } else if (ageFilter.equals(getResources().getStringArray(R.array.age_for_spinner)[4]) && !(Integer.parseInt(user.getAge()) >= 60)) {\r\n                        users.remove(user);\r\n                    }\r\n                }\r\n            }\r\n\r\n            private void filterUserBySex(ArrayList<User> users, User user) {\r\n                if (!sexFilter.isEmpty()) {\r\n                    if (!(user.getSex().equals(sexFilter))) {\r\n                        users.remove(user);\r\n                    }\r\n                }\r\n            }\r\n\r\n            private void filterUsersByName(ArrayList<User> users, User user) {\r\n                if (!nameFilter.isEmpty()){\r\n                    if (!(user.getName().equals(nameFilter))) {\r\n                        users.remove(user);\r\n                    }\r\n                }\r\n            }\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        if (resultCode!= Activity.RESULT_OK) return;\r\n        else{\r\n            switch (requestCode) {\r\n                case CODE_TO_FILTER_DIALOG:getFilterInfoAndFilter(data);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public static FilteredChatListFragment newInstance(Intent data){\r\n        FilteredChatListFragment fragment=new FilteredChatListFragment();\r\n        Bundle args=new Bundle();\r\n        args.putParcelable(KEY_TO_INTENT_DATA,data);\r\n        //args.putSerializable(TYPE_HOLDER, type);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void update() {\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/yesudu/chat_list/fragment/FilteredChatListFragment.java	(revision 697d434c686da1b93740acf19dc89a5a40324a19)
+++ app/src/main/java/com/example/yesudu/chat_list/fragment/FilteredChatListFragment.java	(date 1609856416042)
@@ -3,7 +3,6 @@
 import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -28,13 +27,6 @@
     public static final String FILTER_VIEW_TYPE = "filter_view";
     private static final String TYPE_HOLDER = "type_holder";
 
-    @Nullable
-    @Override
-    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-        return super.onCreateView(inflater, container, savedInstanceState);
-    }
-
-
     @Override
     void setLayoutManagerForRecView() {
         chatRecView.setLayoutManager(new GridLayoutManager(getActivity(),3));
@@ -70,9 +62,8 @@
                 for (DataSnapshot snapshot1 : snapshot.getChildren()) {
                     User user = snapshot1.getValue(User.class);
                     user.setUuid(snapshot1.getKey());
-                    users.add(user);
                     filterUsersByName(users, user);
-                    filterUserBySex(users, user);
+                    filterUsersBySex(users, user);
                     filterUsersByAge(users, user);
                     filterUsersByCity(users, user);
                     filterUsersByOnline(users, user);
@@ -142,7 +133,7 @@
                 }
             }
 
-            private void filterUserBySex(ArrayList<User> users, User user) {
+            private void filterUsersBySex(ArrayList<User> users, User user) {
                 if (!sexFilter.isEmpty()) {
                     if (!(user.getSex().equals(sexFilter))) {
                         users.remove(user);
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"colorPrimary\">#6200EE</color>\r\n    <color name=\"colorPrimaryDark\">#3700B3</color>\r\n    <color name=\"colorAccent\">#03DAC5</color>\r\n    <color name=\"dark_blue\">#204062</color>\r\n    <color name=\"login\">#9aceeb</color>\r\n    <color name=\"no_seen\">#e6e6e6</color>\r\n    <color name=\"colorToolbar\">#3a75c4</color>\r\n    <color name=\"chat_text\">#ffffff</color>\r\n    <color name=\"admin_grey_back\">#e6e6e6</color>\r\n    <color name=\"edit_dialog_text\">#000000</color>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision 697d434c686da1b93740acf19dc89a5a40324a19)
+++ app/src/main/res/values/colors.xml	(date 1609855570966)
@@ -10,4 +10,5 @@
     <color name="chat_text">#ffffff</color>
     <color name="admin_grey_back">#e6e6e6</color>
     <color name="edit_dialog_text">#000000</color>
+    <color name="black_transparent">#77000000</color>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <string name=\"app_name\" translatable=\"false\">Yes u Du</string>\r\n    <string name=\"email_hint\">Enter an Email</string>\r\n    <string name=\"email_reg_hint\" translatable=\"false\">Email*</string>\r\n    <string name=\"pass_hint\">Password</string>\r\n    <string name=\"pass_reg_hint\">Password*</string>\r\n    <string name=\"name_hint\">Name*</string>\r\n    <string name=\"surname_hint\">Surname</string>\r\n    <string name=\"country_hint\">Country*</string>\r\n    <string name=\"city_hint\">City*</string>\r\n    <string name=\"reg_button_text\">Register</string>\r\n    <string name=\"login_button_text\">Log in</string>\r\n    <string name=\"reject_reg\">Enter all graphs with *</string>\r\n    <string name=\"is_successful\">Registration is successful</string>\r\n    <string name=\"is_not_successful\">Registration is not successful</string>\r\n    <string name=\"failed_login\">False email or password</string>\r\n    <string name=\"logout_menu\">Logout</string>\r\n    <string name=\"country\">Country:</string>\r\n    <string name=\"country_label\">Country</string>\r\n    <string name=\"city\">City:</string>\r\n    <string name=\"region\">Region:</string>\r\n    <string name=\"sex\">Sex:</string>\r\n    <string name=\"age\">Age:</string>\r\n    <string name=\"region_reg_hint\">Region</string>\r\n    <string name=\"age_reg_hint\">Age*</string>\r\n    <string name=\"sex_reg_hint\">Sex*</string>\r\n    <string name=\"myAccount\">My account</string>\r\n    <string name=\"chat_list\">Chats</string>\r\n    <string name=\"failed_update_photo\">Failed update photo</string>\r\n    <string name=\"no_image_selected\">No image selected</string>\r\n    <string name=\"upload_progress\">Upload in progress</string>\r\n    <string name=\"find_menu_item_title\">find</string>\r\n    <string name=\"label_sex\">Sex</string>\r\n    <string name=\"label_male\">Male</string>\r\n    <string name=\"label_female\">Female</string>\r\n    <string name=\"label_activity\">Online</string>\r\n    <string name=\"label_online\">online</string>\r\n    <string name=\"label_offline\">offline</string>\r\n    <string name=\"label_additional\">Additional filters</string>\r\n    <string name=\"label_only_with_photo\">with photo</string>\r\n    <string name=\"label_name\">Name</string>\r\n    <string name=\"name_edit_text_hint\">Enter a name</string>\r\n    <string name=\"search_pos_button_text\">search</string>\r\n    <string name=\"enter_email_and_password\">Enter email and password for login</string>\r\n    <string name=\"password_length_short\">Password is short</string>\r\n    <string name=\"edit_account\">Edit</string>\r\n    <string name=\"uploading\">uploading</string>\r\n    <string name=\"ok_pos_button_text\" translatable=\"false\">OK</string>\r\n    <string name=\"label_age\">Age</string>\r\n    <string name=\"city_edit_text_hint\">City</string>\r\n    <string name=\"back_menu\">Back</string>\r\n    <string name=\"seen_text\">seen</string>\r\n    <string name=\"not_seen_text\">no seen</string>\r\n    <string name=\"remove_account_menu_item\">remove account</string>\r\n    <string name=\"choose_image_from\">Choose image from</string>\r\n    <string name=\"sending_image\">Sending image…</string>\r\n    <string name=\"image_attach\">Send photo</string>\r\n    <string name=\"delete_chat\">Delete chat</string>\r\n    <string name=\"blocklist\">BlockList</string>\r\n    <string name=\"saved_image\">Photo saved</string>\r\n    <string name=\"dialog_title_edit\">Edit account</string>\r\n    <string name=\"dialog_title_delete\">Delete chat</string>\r\n    <string name=\"delete_image1\">Delete photo 1</string>\r\n    <string name=\"delete_users\">User deleted this account</string>\r\n    <string name=\"block_chat\">Block user</string>\r\n    <string name=\"have_not_photo\">You have not photo</string>\r\n    <string name=\"photo_delete\">Photo deleted</string>\r\n    <string name=\"unblock_msg_text\">Unblock user?</string>\r\n    <string name=\"panel_admin\">Administrator panel</string>\r\n    <string name=\"you_dont_verification\">You dont verification</string>\r\n    <string name=\"block_account\">Block account</string>\r\n    <string name=\"unblock_account\">Unblock account(time)</string>\r\n    <string name=\"photo_cant_delete\">can\\'t delete photo</string>\r\n    <string-array name=\"sex_for_spinner\">\r\n        <item>Male</item>\r\n        <item>Female</item>\r\n    </string-array>\r\n    <string-array name=\"age_for_spinner\">\r\n        <item>under 18</item>\r\n        <item>18-30</item>\r\n        <item>30-45</item>\r\n        <item>45-60</item>\r\n        <item>60+</item>\r\n        <item>none</item>\r\n    </string-array>\r\n    <string name=\"blocked_chat\">This chat was blocked</string>\r\n    <string name=\"blocked_by_admin\">You have been blocked by Administration</string>\r\n    <string name=\"reset_password\">Reset password</string>\r\n    <string name=\"enter_old_password\">Enter old password</string>\r\n    <string name=\"enter_new_password\">Enter new password</string>\r\n    <string name=\"password_reset\">Password was reset</string>\r\n    <string name=\"password_not_reset\">Password was not reset</string>\r\n    <string name=\"incorrect_old_password\">Incorrect old password</string>\r\n    <string name=\"saved_password\">Save</string>\r\n    <string name=\"about_hint\">Tell about yourself</string>\r\n    <string name=\"set_photo\">Set photo</string>\r\n    <string name=\"about\">About:</string>\r\n    <string name=\"verify_text\">We will send the verification message on this email</string>\r\n    <string name=\"required_photos\">Put photos, it is require for registration</string>\r\n    <string name=\"reject_update\">You entered empty important strings.Update rejected</string>\r\n    <string name=\"gallery_text\">Gallery</string>\r\n    <string name=\"admin\">Administration</string>\r\n    <string name=\"admin_key\" translatable=\"false\">admin</string>\r\n    <string name=\"complain_menu\">Complain to admin</string>\r\n    <string name=\"look_all\">Look all photos</string>\r\n    <string name=\"you_photo\">Before uploading photos, please read the requirements.</string>\r\n    <string name=\"add_image\">Add image</string>\r\n    <string name=\"you_cant_add_4_photo\">you cannot add more than 4 photos</string>\r\n    <string name=\"you_cannot_delete_photo\">you cannot have less than 2 photos in the gallery</string>\r\n    <string name=\"reset_image\">Reset image</string>\r\n    <string name=\"delete_image2\">Delete photo 2</string>\r\n    <string name=\"delete_image3\">Delete photo 3</string>\r\n    <string name=\"delete_image4\">Delete photo 4</string>\r\n    <string name=\"rule_and_policy\">Privacy Policy</string>\r\n    <string name=\"text_rule_policy\" >\r\n        PRIVACY POLICY\\n\r\nThis Privacy Policy of personal data (hereinafter - the Privacy Policy) applies to all information that the Yes u Du Mobile Application (Then Mobile App) can receive about the User while using the Mobile App.\\n\r\n1. DEFINITION OF TERMS\\n\r\n1.1 The following terms are used in this Privacy Policy:\\n\r\n1.1.1. Mobile App Administration (hereinafter referred to as The Yes u Du Administration) - employees authorized to manage the App, acting on behalf of who organize and (or) process personal data, and also determine the purposes of processing personal data, the composition of personal data to be processed, actions (operations) performed with personal data.\\n\r\n1.1.2. \"Personal data\" - any information relating directly or indirectly to a specific or identifiable individual (subject of personal data).\\n\r\n1.1.3. \"Processing of personal data\" - any action (operation) or a set of actions (operations) performed using automation tools or without using such tools with personal data, including collection, recording, systematization, accumulation, storage, clarification (update, change), extraction, use, transfer (distribution, provision, access), depersonalization, blocking, deletion, destruction of personal data.\\n\r\n1.1.4. \"Confidentiality of personal data\" is a mandatory requirement for the Operator or other person who has gained access to personal data to prevent their dissemination without the consent of the subject of personal data or other legal grounds.\\n\r\n1.1.5. User of the Yes u Du Mobile App (hereinafter referred to as the User) - a person who has access to the App via the Internet and uses the Mobile App.\\n\r\n\\n\r\n2. GENERAL PROVISIONS\\n\r\n2.1. The use of the Mobile App by the User means acceptance of this Privacy Policy and the terms of processing of the User`s personal data. 2.2. In case of disagreement with the terms of the Privacy Policy, the User must stop using the Mobile App.\\n\r\n2.3. This Privacy Policy applies only to the Yes u Du Mobile App. The App does not control and is not responsible for third-party sites to which the User can click on the links sent by the Users to each other.\\n\r\n2.4. The Administration does not verify the accuracy of the personal data provided by the Yes u Du Mobile App User.\\n\r\n\\n\r\n3. SUBJECT OF THE PRIVACY POLICY\\n\r\n \\n\r\n3.1. This Privacy Policy establishes the obligations of the Yes u Du Administration to not disclose and ensure the protection of the confidentiality of personal data that the User provides upon the request of the Yes u Du Administration during registration.\\n\r\n3.2. Personal data allowed for processing under this Privacy Policy is provided by the User by filling out the registration form in the App in the \"Registration\" section and in the \"Profile\" section and includes the following information:\\n\r\n3.2.1. name, surname (at the request of the User);\\n\r\n3.2.2. day, month, year of birth;\\n\r\n3.2.3. email address;\\n\r\n3.3.4. sex\r\n3.2.5. User`s place of residence (country, city)\\n\r\n3.2.6. additionally provided by the Users at the request of the Yes u Du Administration in order to fulfill the obligations of the Yes u Du Administration to the Users arising from the contract for the provision of the Services of the Mobile App. The App Administration has the right, in particular, to request from the User a photo of the passport, or other document containing the name, surname,sex, year, date, month of birth, the User`s photo (except series and numbers of documents), as well as other additional information that, at the discretion of the Administration, will be necessary and sufficient for identification of such a User and will allow to exclude abuse and violations of the rights of third parties by misleading them.To verify the User, only the above data is required, the rest of the information in the documents must be painted over before sending.\\n\r\n3.3. Any other personal information not specified above is subject to reliable storage and non-proliferation, with the exception of cases provided for in paragraphs. 5.2. and 5.3. of this Privacy Policy.\\n\r\n\\n\r\n4. PURPOSE OF COLLECTING PERSONAL USER INFORMATION\\n\r\n4.1. The User`s personal data may be used by the Yes u Du Administration for the following purposes:\\n\r\n 4.1.1. Identification of the User registered in the Mobile App.\\n\r\n 4.1.2. Providing the User with access to personalized resources of the Mobile App.\\n\r\n4.1.3. Establishing feedback with the User, including sending notifications, requests regarding the use of the Yes u Du Mobile App, provision of services, processing messages or complaints from the User.\\n\r\n4.1.4. Determining the location of the User to ensure security, prevent fraud.\\n\r\n4.1.5. Confirmation of the accuracy and completeness of personal data provided by the User in order to prevent deception and misleading other users.\\ n\r\n4.1.6. Providing the User with effective customer and technical support in case of problems associated with the use of the Yes u Du Mobile App.\\n\r\n4.1.7. Implementation of advertising activities with the consent of the User.\\n\r\n\\n\r\n5. METHODS AND TERMS OF PROCESSING PERSONAL INFORMATION\\n\r\n5.1. The processing of the User`s personal data is carried out without any time limit, in any legal way, including in personal data information systems using automation tools or without using such tools.\\n\r\n5.2. The User`s personal data can be transferred to the authorized state authorities of the country in which the user lives at the time of the incident, only on the grounds and in the manner established by the legislation of this country.\\n\r\n5.3. In case of loss or disclosure of personal data, the Yes u Du Administration informs the User about the loss or disclosure of personal data.\\n\r\n5.4.The Yes u Du Administration takes the necessary organizational and technical measures to protect the User`s personal information from unauthorized or accidental access, destruction, modification, blocking, copying, distribution, as well as from other illegal actions of third parties.\\n\r\n5.5. The Yes u Du Administration, together with the User, takes all necessary measures to prevent losses or other negative consequences caused by the loss or disclosure of the User`s personal data.\\n\r\n\\n\r\n6. OBLIGATIONS OF THE PARTIES\\n\r\n6.1. The user is obliged:\\n\r\n6.1.1. Provide information about personal data necessary to use the Yes u Du Mobile App.\\n\r\n6.1.2. Update, supplement the provided information about personal data in case of changes in this information.\\n\r\n\\n\r\n6.2. The Mobile App Administration is obliged to: 6.2.1. Use the information received solely for the purposes specified in clause 4 of this Privacy Policy.\\n\r\n6.2.2. Ensure that confidential information is kept secret, not disclosed without the prior written permission of the User, and also not to sell, exchange, publish, or disclose in other possible ways the transferred personal data of the User, with the exception of clauses cl. 5.2. and 5.3. of this Privacy Policy.\\n\r\n6.2.3. Take precautions to protect the confidentiality of the User`s personal data in accordance with the procedure usually used to protect this kind of information in the existing business.\\n\r\n6.2.4. Block personal data related to the relevant User from the moment the User or his legal representative or the authorized body for the protection of the rights of personal data subjects apply or request for the verification period, in case of revealing inaccurate personal data or illegal actions.\\n\r\n6.2.5.The administration independently detects violations committed by users (provided for by the rules for using the application), and also takes measures for complaints from users about violations, but initially cannot prevent their commission.\\n\r\n\r\n\\n\r\n7. RESPONSIBILITY OF THE PARTIES\\n\r\n7.1. The Yes u Du Administration, which has not fulfilled its obligations, is liable for losses incurred by the User in connection with the illegal use of personal data, in accordance with the legislation of the country in which the user is registered, with the exception of cases provided for in cl. 5.2., 5.3. and 7.2. of this Privacy Policy.\\n\r\n7.2. In case of loss or disclosure of Confidential Information, the Mobile App Administration is not responsible if this confidential information:\\n\r\n7.2.1. Became public domain before its loss or disclosure.\\n\r\n7.2.2. Was received from a third party prior to its receipt by the Yes u Du Administration.\\n\r\n7.2.3. Was disclosed with the consent of the User.\\n\r\n\\n\r\n8. DISPUTE RESOLUTION\\n\r\n8.1. Before going to court with a claim for disputes arising from the relationship between the User of the Yes u Du Mobile App and the Mobile App Administration, it is mandatory to submit a claim (a written proposal for a voluntary settlement of the dispute).\\n\r\n8.2. The recipient of the claim within 30 calendar days from the date of receipt of the claim shall notify the applicant of the claim in writing about the results of the consideration of the claim.\\n\r\n8.3. If an agreement is not reached, the dispute will be referred to a judicial authority in accordance with the current legislation of the country in which the User lives at the time of the incident.\\n\r\n8.4. The current legislation of the country in which the User lives at the time of the incident applies to this Privacy Policy and the relationship between the User and the Yes u Du Administration.\\n\r\n\\n\r\n9. ADDITIONAL TERMS\\n\r\n9.1. The Yes u Du Administration has the right to make changes to this Privacy Policy without the consent of the User.\\n\r\n9.2. The new Privacy Policy comes into force from the moment it is posted in the Mobile App, unless otherwise provided by the new edition of the Privacy Policy.\\n\r\n9.3. All suggestions or questions about this Privacy Policy should be reported to the of the Yes u Du Mobile App Administration.\\n\r\n   </string>\r\n    <string name=\"rules_resources_text\">\r\n    Resource Use Agreement (Resource Rules)\\n\r\n\\n\r\nPart I. Universal provisions\\n\r\nThe Resource offers services for the exchange of information between users of the Mobile Application (then Mobile App) Yes u Du, which are the subject of this Agreement on the use of the Mobile App (Resource). In this regard, you need to carefully read the terms of this Agreement, which are considered by the Resource \"Yes u Du\" as a public offer in accordance with the Civil Code of the country in which the user is registered (hereinafter referred to as the \"Public Offer\")\\n\r\nThe terms of use of the Yes u Du Resource are governed by this Agreement.\\n\r\n Part I “Universal Provisions” applies to the relations established by Part II and Part III, unless otherwise provided for in Part II or Part III.\\n\r\nThe provisions provided for in Part II shall apply to the relationship established by Part III, unless otherwise provided for in Part III.\\n\r\nPlease note that Part II and Part III contain different conditions for using the Mobile App (Services), depending on which type of interaction on the Mobile App you choose.\\n\r\n\r\n 1. Terms used in the Agreement\\n\r\nMobile App, Resource - an Internet resource, including the Yes u Du Mobile App, which provides access to the functionality of the Yes u Du Mobile App. The resource and the Mobile App are the intellectual property of an individual.\\n\r\n\r\nAdministration - an individual, owner of intellectual property and a resource, as well as persons duly authorized by the owner of the Resource to manage this Resource, within the framework of the use of the Mobile App and the Internet interface, by end users.\\n\r\n\r\nUser - any individual, 18 years of age and older, who is not married, who has passed the registration procedure and uses the Resource, in cases expressly provided for in this Agreement. The term User in this Agreement denotes both Verified and Unconfirmed users.\\n\r\n\r\nLogin - the email address of the User chosen by him during registration and used by him in the process of using the Resource. It is forbidden to register and use several Logins by the same User.\\n\r\n\r\nMobile App is a hardware and software complex based on Android.\\n\r\nPassword is a symbolic combination chosen by the User independently and providing, together with the Login, his identification when using the Resource.\\n\r\n\r\nUnverified User - a User who has passed the registration procedure.\\n\r\nVerified User - A User who has passed the verification procedure in accordance with Section 4\\n\r\n\r\nResource Services - services provided by the Resource to Verified Users for the exchange of information of any nature between them in the Mobile App.\\n\r\n\r\n  Acceptance of the rules of the resource (Public Offer) - full and unconditional acceptance by the User of the Agreement of Use by downloading and installing the Yes u Du Mobile App and taking actions to use the Yes u Du Mobile App.\\n\r\n\r\nChat is a service, part of the Mobile App, that allows to Users to exchange private messages.\\n\r\nAt the time the User makes the Acceptance of the service rules (public offer), the User and the Resource are considered to have entered into this Agreement.\\n\r\n  Part II. Agreement on the use of the Mobile App / Resource Yes u Du by individuals\\n\r\n(hereinafter referred to as this Part II - \"Part II of the Agreement\")\\n\r\n\r\n 1.General Provisions\\n\r\n This Part II of the Agreement governs the procedure for using the Mobile App, as well as the relationship arising when Users use the Mobile App for the purpose of publishing and exchanging information. The resource has the right at any time to refuse any User to use the Mobile App and Services in case of violation of the Agreement. The Resource provides Users with a personal non-exclusive and non-transferable right to use the Internet interface and the Mobile App in accordance with this Agreement, provided that the User, nor any other persons, with the assistance of the User, will take actions:\\n\r\n to copy or modify the software of the Resource; for the creation of programs derived from the Mobile App software; on penetration into software in order to obtain program codes; on the sale, assignment, lease, transfer to third parties in any other form of rights in relation to the material of the Mobile App; to modify the Mobile App, including in order to obtain unauthorized access to it; and other actions similar to those listed above and violating the rights of the Resource and third parties.\\n\r\n The User is responsible for the observance of the rights (material and intangible) of third parties to information transferred (provided) to the Administration or to third parties when using the Mobile App and the Internet interface. The Users independently assess the legality of their use of the Mobile App, including from the point of view of the legislation of the country of which they are residents.\\n\r\nThe User, performing any actions on the use of the Mobile App and the Internet interface (viewing the Mobile App, Registration, Verification, sending messages and other specified in the Mobile App and Internet interface, and others), expresses his full and unconditional consent to the terms of the Agreement on the use of the Mobile App Yes u Du posted in the Mobile App\\n\r\nThe Yes u Du Mobile App located in the Mobile App\\n\r\nThe agreement on the use of the Yes u Du Mobile App concluded in the form of a public offer is stipulated by the Civil Code of the country in which the user lives at the time of the incident and does not require a bilateral signature and is indeed in electronic form.\\n\r\n\r\n 2.User registration\\n\r\nA person wishing to become a User must complete the Registration procedure in the appropriate section of the Mobile App. When registering, the User is assigned a chosen pair of Login (email) plus Password, which is used later by the User when working with the Mobile App. The User can go through the Registration procedure only once\\n\r\n\r\n  When registering in the Mobile App, the User is obliged to provide the Resource Administration with the necessary reliable and up-to-date information to form the User Profile, including the Login (email address) and Password for access to the Mobile App, unique for each User, and the Username.\\n\r\n\r\n The User independently chooses the Password for himself, however, the Resource strongly recommends using Passwords that are at least 6 (six) characters long and include both lowercase and uppercase letters, as well as numbers.\\n\r\n By filling out the Profile, the User hereby confirms that he makes the information contained in his profile publicly available, that is, potentially available to all other Users.\\n\r\n In order to avoid misleading other users, the Yes u Du Administration recommends that you provide real data: Name, Age, Sex, Place of residence (Country, City).\\n\r\n Such data as: Name, Age, Sex, Place of residence, the User specifies once, during registration. In the future, only the Yes u Du Administration  has the right to change the user data, based on the user`s data received after passing the Verification.\\n\r\n Since the Yes u Du Mobile App is designed for a serious relationship with the aim of starting a family, registration of married people is prohibited. In case of revealing false user data: Name, Age, Gender, Place of residence (Country, City), identifying other people`s photos in the profile, as well as detecting a married User, his account will be blocked by the Administration.\\n\r\n Unlocking will be done only after full confirmation of the Use`s data required to use the App: Photos, Gender, Age, Place of residence (Country, City). Confirmation of user data occurs by going through the Verification procedure (part 4)\\n\r\n The user is responsible for the accuracy, relevance, completeness and compliance with the legislation of the country in which the user lives at the time of the incident, the information provided during Registration and its purity from third-party claims. The User is solely responsible for keeping the Password secret from third parties.\\n\r\nThe Company does not bear any responsibility in case of violation of the User`s rights by third parties who have received unauthorized access to the pair of Username plus Password. When registering, the User agrees with this Agreement and assumes the rights and obligations specified therein related to the use and operation of the Mobile App. After successful registration of the User in the Mobile App, the Resource assumes the rights and obligations to the User specified in this Agreement.\\n\r\n\r\n 3.Rules for posting photos in the profile.\\n\r\nProfile photos should be clear and close-up.\\n\r\n It is forbidden to post the following photos in the profile:\\n\r\n - other people`s photos\\n\r\n - taken from afar\\n\r\n - substandard (with a violation of sharpness, lighting, etc.);\\n\r\n - already existing in the profile or very similar to them;\\n\r\n - on which the user is not visible or not at all;\\n\r\n - on which the face is poorly visible, or only part of the face is visible;\\n\r\n - flowers, animals, insects, landscapes, buildings, structures, etc.;\\n\r\n - erotic and pornographic content;\\n\r\n - group;\\n\r\n - baby photos;\\n\r\n - irrelevant (made 2 years ago or more);\\n\r\n - in sunglasses;\\n\r\n - tilted to the right, left, upside down, in profile;\\n\r\n - parts of the user`s body (arms, legs, lips, back, etc.);\\n\r\n - containing scenes of violence;\\n\r\n - containing advertisements;\\n\r\n - non-original (frames, inscriptions, hearts, flowers, etc.);\\n\r\n - black and white;\\n\r\n\r\nPhotos that do not meet the above requirements will be deleted by the Administration, and the account will be blocked until valid photos are uploaded. For re-uploading previously rejected photos, your account will be blocked for a period of 3 days.\\n\r\n\r\n 4.User verification. \\n\r\nVerification is the confirmation by the user of the data posted in the profile.\\n\r\n\r\n The following user data are subject to confirmation: name, surname, date of birth, gender, country, city of residence and at least two photographs of the user that differ from each other, photographs and other data are checked by the Administration for reliability and for the use of various graphic editors by the User.\\n\r\n\r\n This data is confirmed by sending a photo of the user along with a passport or other document confirming the identity of the user. To verify the User, only the above data is required, the rest of the information in the documents must be painted over before sending. The user`s place of residence is confirmed by sending data about his location (country, city). The user who has passed the verification procedure is attached a check mark indicating the status of the Verified User.\\n\r\n\r\nThe status of the Confirmed User is provided by the Administration at its own discretion after receiving the full above information from the User.The user has the right to independently request a verification procedure to confirm his profile data.\\n\r\n The Administration has the right to refuse the User to Verify without explaining the reasons for the refusal, regardless of the costs and efforts incurred by the User when going through the Verification procedure.\r\nAfter successfully passing the verification procedure, the Administration itself indicates the real data of the User, referring to the verification performed, thereby being the guarantor of their authenticity. Confirmed and Unconfirmed users have the same rights and obligations in using the Yes u Du Mobile Application. The advantage of a Verified User is that he inspires confidence in the Users, since his personal data is real.\\n\r\n The Confirmed User status can be removed from the User at any time at the discretion of the Administration in connection with the emergence of new information about the User.\\n\r\n\r\n 5.Violations and blocking\\n\r\nViolations that may entail temporary or permanent blocking of the User`s account:\\n\r\n• The user used profanity, criticism, incited conflict situations, called for a violation of the rules of the Resource or the Legislation of the country in which the user is registered, used offensive language to address other Users;\\n\r\n• The User has received more than three complaints from other Users of the Resource, while the Administration checks all complaints about the legality and violations of the rules of the Resource, and does not restrict access to the Resource without a valid reason;\\n\r\n• The user specified the personal data of another individual, without his knowledge and consent;\\n\r\n• The User has published in his profile links to third-party resources using materials that are contrary to or prohibited by the legislation of the country in which the User is registered;\\n\r\n• The user has published materials that are contrary to or prohibited by the laws of the country in which the user is registered.\\n\r\n• When exchanging information with other Users, the User called for illegal or illegal actions, and also published materials of an explicit or pornographic nature (photos of uncovered genitals, or scenes of sexual intercourse between people, people and animals);\\n\r\n• The User has violated the requirements for photos posted in the Profile. The photographs must show the User himself (close-up face) without strangers, objects or animals and other requirements specified in paragraph 4.\\n\r\n• The user has violated the rules of communication with the Administration. The Administration is called upon to monitor compliance with the Agreement on the use of the Resource by all Users of this Resource, as well as to give recommendations to Users on the correct filling of the Profile. To discuss controversial issues with the Administration, Users need to use only direct contacts: personal chat, e-mail. It is forbidden to publicly argue with the Administration and discuss its actions. You can complain about the actions or inaction of the Administration by sending an appropriate message to the Administration of the Mobile App.\\n\r\n\r\n 6.Rules for posting information\\n\r\nIt is prohibited to post information, the purpose or subject of which is:\\n\r\n• granting and receiving loans, replenishing accounts in payment systems, making money transfers, accepting payments in favor of payment systems: Alert Pay (alertpay.com), c-gold (c-gold.com), e-bullion (e-bullion.com ), e-gold (e-gold.com), Liberty Reserve (libertyreserve.com), Pecunix (pecunix.com), Perfect Money (perfectmoney.com), Bit Coin (including exchanges that exchange);\\n\r\n• attraction of Users to third-party resources, sites, or registration of Users on such resources, sites;\\n\r\n• advertising of your services and goods or services and goods belonging to third parties;\\n\r\n• services of an erotic nature;\\n\r\n• cheat or change site statistics, the number of subscribers in social networks, etc .;\\n\r\n • ordering of automatic or manual distribution of invitations and messages to users of social networks, email newsletters;\\n\r\n• provision of services for the distribution of goods;\\n\r\n• medicines, food additives, biologically active additives;\\n\r\n• poisons;\\n\r\n• medicinal raw materials obtained from reindeer husbandry (antlers and endocrine raw materials);\\n\r\n• narcotic drugs, psychotropic substances and their precursors, cultivation of narcotic plants;\\n\r\n• services of storage, transportation, manufacture, processing of narcotic drugs, precursors, psychotropic substances or their analogues, as well as illegal acquisition, storage, transportation of plants containing narcotic drugs or psychotropic substances, or their parts containing narcotic drugs or psychotropic substances;\\n\r\n•  services for the organization of prostitution, involvement in prostitution;\\n\r\n•  content for adults, any pornography, sex video chats, sites indicating the placement of candid photos;\\n\r\n• tobacco products;\\n\r\n•  alcoholic beverages, ethyl alcohol;\\n\r\n•  precious, rare metals and stones, jewelry, including waste containing precious and rare earth metals and precious stones;\\n\r\n•  gold bars, investments in gold bars, any turnover of precious metals, natural precious stones or pearls, including the sale of items made of precious metals;\\n\r\n• services to assist in the conduct of hostilities, regardless of the side of the conflict, the form of support (humanitarian aid, supply of weapons, communications, medicines, etc.);\\n\r\n• weapons and ammunition (civil, service, firearms):\\n\r\n</string>\r\n    <string name=\"resources_text_part\">\r\n1. Development, production, testing, storage, repair and disposal.\\n\r\n2. trade, including the main parts of firearms.\\n\r\n3. ammunition, including cartridges and their components such as casings and primers.\\n\r\n•  military equipment, spare parts, components and devices for it, explosives, explosives, gunpowder, all types of rocket fuel, as well as special materials and special equipment for their production, special equipment of personnel of paramilitary organizations and regulatory and technical products for their production and operation;\\n\r\n• chemical warfare agents, means of protection against them, and normative and technical documentation for their production and use;\\n\r\n• services for the manufacture / conversion / repair of firearms, their main parts, ammunition, explosives or explosive devices;\\n\r\n• pesticides and agrochemicals limited in circulation;\\n\r\n• strong or poisonous substances;\\n\r\n• museum items and museum collections included in the Museum Fund of the country in which the User is registered.\\n\r\nX-ray equipment, instruments and equipment using radioactive substances and isotopes;\\n\r\n• rocket and space, complexes of military communications and control systems and normative and technical documentation for their production and operation;\\n\r\n• gambling, including lotteries, bookmakers and sweepstakes;\\n\r\n• forex, binary auctions, bitcoins;\\n\r\n• financial pyramids, HYIP;\\n\r\n• services for the placement of information, materials discrediting the honor and dignity of a person, violation of the secrecy of correspondence, personal life;\\n\r\n• services for the creation, use and distribution of malicious computer programs;\\n\r\n• cardsharing services;\\n\r\n• services for the provision of illegal access to computer information;\\n\r\n• services for hacking third party accounts, extracting classified information, and modifying it;\\n\r\n• special technical means designed to secretly obtain information;\\n\r\n• services for the distribution and sale of information constituting commercial, tax or banking secrets;\\n\r\n• trade / production of counterfeit credit or payment cards and other payment instruments;\\n\r\n• services for placing public appeals to carry out extremist activities, incite hatred or enmity, as well as humiliation of human dignity;\\n\r\n• services for organizing an extremist community;\\n\r\n• services of mediation in bribery;\\n\r\n• any other goods or services prohibited under the laws of the country in which the user lives at the time of the incident.\\n\r\n\r\n 7.User Responsibility \\n\r\n Users are solely responsible for their actions / inaction when using the Resource. Users guarantee that the use of the Resource will be carried out by them in a way that will not violate the rights of third parties. Users guarantee that they have the rights to use the materials they post in the App.\\n\r\n  Users are solely responsible for their actions / inaction when using the Resource. Users guarantee that the use of the Resource will be carried out by them in a way that will not violate the rights of third parties. Users warrant that they have the rights to use the materials posted by them in the Mobile App.\\n\r\n   Users agree to abide by this Agreement. In case of violation of the Agreement by UsersUsers, the Administration reserves the right to temporarily restrict the User`s access to the Resource (temporary ban), and in case of gross and / or repeated violation of the Agreement, to refuse access to the Resource (permanent ban). In the event of a permanent ban, the User undertakes not to take any actions during his life, with the aim of gaining access to the Resource, the Administration has the right during the term of this obligation, that is, during the life. Of the User, to whom a permanent ban has been applied, to process his personal data in order to control compliance by such a User with the obligation to not take any action to gain access to the Resource. The same rules apply to a temporary ban.\\n\r\n\r\n 8.User Rights and obligations \\n\r\nAny User of the Resource has the right to use the following features of the Resource:\\n\r\n• Chatting with other Users;\\n\r\n• Viewing photos posted by Users available for such viewing in accordance with this Agreement;\\n\r\n• Send complaints to the Administration regarding violations of the Agreement by the Users;\\n\r\n• Use other opportunities, access to which is provided to him by the Resource represented by the Administration;\\n\r\n Using the App, the user is prohibited from:\\n\r\n• register as a User on behalf of or instead of another person (fake account);\\n\r\n• mislead Users about their identity using the Login and Password of another registered User;\\n\r\n• mislead Users about their identity by posting other people`s photos;\\n\r\n• distort information about yourself, your name, age, gender, place of residence;\\n\r\n• upload, store, publish, distribute and provide access or otherwise use any information that: contains threats, discredits, offends, defames honor and dignity or business reputation or violates the privacy of other Users or third parties; violates the rights of minors;\\n\r\nis vulgar or obscene, contains pornographic images and texts or scenes of a sexual nature involving minors; contains scenes of inhuman treatment of animals; contains a description of the means and methods of suicide, any incitement to commit it; promotes and / or contributes to the incitement of racial, religious, ethnic hatred or enmity, promotes fascism or ideology of racial superiority; contains extremist materials; promotes criminal activity or contains advice, instructions or guidelines for committing criminal acts, contains information of limited access, including, but not limited to, state and commercial secrets, information about the private life of third parties;\\n\r\ncontains advertisements or describes the attractiveness of drug use, including \"digital drugs\" (sound files that affect the human brain through binaural beats), information about the distribution of drugs, recipes for their manufacture and advice on use; is fraudulent; and also violates other rights and interests of citizens and legal entities or the requirements of the legislation of the country in which the user lives at the time of the incident;\\n\r\n• illegally upload, store, publish, distribute and provide access or otherwise use the intellectual property of Users and third parties;\\n\r\n• use software and take actions aimed at disrupting the normal functioning of the Resource and its capabilities or personal accounts of Users;\\n\r\n• in any way, including, but not limited to, by deception, abuse of trust, hacking, try to gain access to the Login and Password of another User;\\n\r\n• post any other information that, in the personal opinion of the Administration, is undesirable, does not correspond to the purposes of creating the Resource, infringes on the interests of Users or for other reasons is undesirable for posting on the Resource;\\n\r\n\r\n 9.Chat function (messaging)\\n\r\nAfter Verification, the User is provided with access to the messaging service, which allows you to exchange correspondence with the Administration and other Users. The correspondence carried out through this function is not personal. The user, using this Service, accepts the fact that the Administration at any time has the right to read the messages sent, in order to prevent violation of the Terms of Use of the Resource and the Legislation of the country in which the user is registered.\\n\r\nThe user agrees to receive personal messages from the Administration at any time and of any nature. The administration does not moderate (preview, evaluate and filter) messages sent by Users to each other. Users are prohibited from using the Chat (Messaging) Function to:\\n\r\n• committing actions that violate the legislation of the country in which the User is registered, the norms of international law;\\n\r\n• uploading, sending, transferring or any other way of publishing advertising information not permitted in a special way, spam, pyramid schemes, letters of happiness;\\n\r\n• uploading, sending, transmitting or any other way of publishing materials that are illegal, harmful, threatening, offending morality, defamatory, violating copyright, promoting hatred and / or discrimination of people on racial, ethnic, gender, social grounds;\\n\r\n• downloading, sending, transferring or any other way of publishing materials that violate the rights of third parties.\\n\r\nThe Administration reserves the right to provide, in cases stipulated by the legislation of the country in which the User is registered, access to the User`s personal messages to third parties.\\n\r\n\r\n 10. Resource Services\\n\r\nThe resource provides free services for the exchange of information between Users, with the aim of their further acquaintance, and the possibility of creating a family, in the full general and legal sense of the word.\\n\r\nThe User has the right to:\\n\r\n• use the Functions and Services of the Resource, subject to the Acceptance of the Agreement and the Rules of the Resource, as an Offer;\\n\r\n The User undertakes:\\n\r\n• when using the Services of the Resource, comply with all the conditions for the provision of the Services established in the Agreement;\\n\r\n• not to abuse the provided opportunities, not to use independently or with the involvement of third parties the provision of the Services and / or the possibility of using the Resource Functions for purposes that may be qualified as a violation of the rights of third parties to intellectual property, unfair competition, other violation of the law; do not carry out actions that affect the normal operation of the Resource.\\n\r\nThe Verified User is solely responsible for the safety and confidentiality of registration data (login and password). All actions carried out in relation to the Services provided by the Resource using the login and password of the Verified User are considered to have been carried out by him. The Verified User is independently liable to third parties for all actions performed using his registration data (login and password). The Company is not responsible for the unauthorized use of the Verified User`s registration data by third parties.\\n\r\n\r\n 11.Resource Arbitration\\n\r\nIn the event of disputes between Users, or complaints from one User in relation to another User, they are resolved and considered by the Administration. Users agree that the Administration has the right to take any necessary actions based on the results of considering a disputed situation. The Administration decision is final and not subject to appeal. This function of the Administration is called Resource Arbitration\\n\r\n\r\n 12.Special conditions\\n\r\nThe resource does not guarantee that the software of the Mobile App and the Internet interface is free of errors or will function smoothly.\\n\r\nThe resource does not bear any responsibility for the decisions made by the Administration when resolving conflicts between Users.\\n\r\nThe resource is not responsible for losses or other harm incurred by the User in connection with the actions of third parties.\\n\r\n The resource reserves the right to remove from its servers any information or materials that, to the Administration opinion are unacceptable, undesirable or violate this Agreement.\\n\r\n The resource does not control the information, services and products located in or offered through the Internet. As a result, the User accepts the condition that all goods, information and services offered or available through the Resource or on the Internet are provided by third parties that are in no way associated with the Resource. The User assumes full responsibility and risks for the use of Advertising and the Internet. The Company does not provide any guarantees for any goods, information and services supplied through Advertising or via the Internet in general. The company will not be held liable for any costs or damage directly or indirectly arising from such deliveries. The user accepts the condition that he accepts responsibility for assessing the accuracy, completeness and suitability of all opinions, ratings, services and other information, quality and functions of the goods provided through the Advertising or the Internet in general.\\n\r\n All rights to materials posted on the Resource by Users (user content), including intellectual rights, belong to the respective Users and / or other copyright holders. The User provides the Resource with guarantees regarding the user content. With the placement by Users of user-generated content on the Resource, the Resource, at no cost, receives a perpetual non-exclusive right (simple license) to use such user content and the intellectual property objects included in it throughout the world within the limits of its use by any permitted in accordance with the legislation of that country in which the user is registered, in ways, including without specifying the name (pseudonym) of the author, in order to 1) fulfill the terms of this Agreement by the Resource, 2) protect the rights and legitimate interests of the Resource. The resource has the right to provide the received volume of rights to third parties in order to fulfill the stated purposes, as well as create archive copies of user content. All rights to the Resource and its functions, including the rights to intellectual property objects that are part of the Resource and its functions (including, but not limited to, computer programs, databases, graphic design), as well as the rights to the logo and other similar works, the rights to the Yes u Du trademarks (verbal, figurative and combined) belong to the Individual, the owner of this Intellectual Property and Resource or its affiliates.\\n\r\n In relation to the Resource and its functions, reverse engineering, emulation, disassembly, decompilation, decoding, modification, translation into other languages is prohibited; it is prohibited to reproduce the design of the Mobile App and the Internet interface or part of it; it is prohibited to violate the protection systems of the Mobile App and the Internet interface, delete, hide or change signs or notices about the intellectual rights of the Resource and its affiliates placed in the Mobile App and the Internet interface.\\n\r\nIt is also prohibited for third parties to automatically process information posted or contained in the Mobile App and the Internet interface.\\n\r\n  Without the prior written permission of the Resource, it is prohibited to use the intellectual property of the Resource and its affiliates by any means (for any, including non-commercial, purposes), except as expressly provided for in this Agreement.\\n\r\n  The use of user content, in whole or in part (including photos and images, information about Users and other information posted by them in the Mobile App or the Internet interface) is also prohibited without the prior written permission of the Resource. Prohibited use includes copying, collecting, recording, organizing, accumulating, storing, modifying, retrieving, reproducing, posting, transferring, deleting and any other way of using such user content, for any purpose, including non-commercial.\\n\r\n\r\n 13. Entry into force and procedure for amendment of this Agreement\\n\r\n  The Agreement and changes to them come into force from the moment they are published in the Mobile App and the Internet interface. Changes to the Agreement can be made at any time. The User undertakes to familiarize himself with the current version of the Agreement before each use of the Resource. If the User decides not to agree with the amended Agreement, then he must refuse to use the Service. The user who continues to use the Resource agrees to the changes.\\n\r\n\r\n  14. Applicable law\\n\r\nAll relationships between the Resource and the Users are subject to regulation solely by the legislation of the country in which the User lives at the time of the incident. In case of violation of the legislation of the country in which the User lives at the time of the incident, in which he bears full administrative and criminal responsibility.\\n\r\n\r\n</string>\r\n    <string name=\"licence_text\" translatable=\"false\">\r\n        Yes u Du for Android is built including 3rd party software \\n\r\n\\n\r\n******\\n\r\n\\n\r\nVolley\\n\r\n\\n\r\nCopyright (C) 2012 The Android Open Source Project\\n\r\n\\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\\n\r\n\\n\r\nhttp://www.apache.org/licenses/LICENSE-2.0\\n\r\n\\n\r\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\\n\r\n    </string>\r\n    <string name=\"about_us\">About us</string>\r\n    <string name=\"licence\">License</string>\r\n    <string name=\"rule_and_resources\">Rules of resource</string>\r\n    <string name=\"read_rules\">By registering, you agree to our Policy and Rules</string>\r\n    <string name=\"region_label\">Region</string>\r\n    <string-array name=\"country_filter\">\r\n        <item> </item>\r\n        <item>Russia</item>\r\n        <item>Armenia</item>\r\n        <item>Artsakh</item>\r\n        <item>USA</item>\r\n        <item>France</item>\r\n        <item>Georgia</item>\r\n        <item>Iran</item>\r\n        <item>Syria</item>\r\n        <item>Lebanon</item>\r\n        <item>Ukraine</item>\r\n        <item>Turkey</item>\r\n        <item>Canada</item>\r\n        <item>Argentina</item>\r\n        <item>Uzbekistan</item>\r\n        <item>Abkhazia</item>\r\n        <item>Australia</item>\r\n        <item>Germany</item>\r\n        <item>Brazil</item>\r\n        <item>Greece</item>\r\n        <item>Spain</item>\r\n        <item>Turkmenistan</item>\r\n        <item>Bulgaria</item>\r\n        <item>Belarus</item>\r\n        <item>Kazakhstan</item>\r\n        <item>Hungary</item>\r\n        <item>Israel</item>\r\n        <item>Iraq</item>\r\n        <item>Uruguay</item>\r\n        <item>Great Britain</item>\r\n        <item>Czech</item>\r\n        <item>Poland</item>\r\n        <item>Netherlands</item>\r\n        <item>Belgium</item>\r\n        <item>Egypt</item>\r\n        <item>UAE</item>\r\n        <item>Austria</item>\r\n        <item>Moldova</item>\r\n        <item>Sweden</item>\r\n        <item>Switzerland</item>\r\n        <item>Kuwait</item>\r\n        <item>Italy</item>\r\n        <item>Denmark</item>\r\n        <item>Cyprus</item>\r\n        <item>Jordan</item>\r\n        <item>Romania</item>\r\n        <item>Lithuania</item>\r\n        <item>Estonia</item>\r\n        <item>Norway</item>\r\n        <item>Tajikistan</item>\r\n        <item>Kyrgyzstan</item>\r\n        <item>Slovakia</item>\r\n        <item>Finland</item>\r\n        <item>Qatar</item>\r\n        <item>Chile</item>\r\n        <item>South Ossetia</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"region_filter_rus\">\r\n        <item> </item>\r\n        <item>Moscow reg.</item>\r\n        <item>Krasnodar reg.</item>\r\n        <item>Stavropol reg.</item>\r\n        <item>Leningrad reg.</item>\r\n        <item>Rostov region</item>\r\n        <item>Adygea</item>\r\n        <item>Altai reg.</item>\r\n        <item>Altai republic</item>\r\n        <item>Amur reg.</item>\r\n        <item>Arhangelsk reg.</item>\r\n        <item>Astrakhan reg..</item>\r\n        <item>Bashkortostan</item>\r\n        <item>Belgorod reg.</item>\r\n        <item>Bryansk reg.</item>\r\n        <item>Buryatia</item>\r\n        <item>Vladimir reg.</item>\r\n        <item>Volgograd reg.</item>\r\n        <item>Vologda reg.</item>\r\n        <item>Voronezh reg.</item>\r\n        <item>Dagestan</item>\r\n        <item>Jewish Aut.Reg.</item>\r\n        <item>Zabaykalsky reg.</item>\r\n        <item>Ivanovo reg.</item>\r\n        <item>Irkutsk reg.</item>\r\n        <item>Kabardino-Balkaria</item>\r\n        <item>Kaliningrad reg.</item>\r\n        <item>Kaluga reg.</item>\r\n        <item>Kamchatka reg.</item>\r\n        <item>Karachay-Cherkessia</item>\r\n        <item>Kemerovo reg.</item>\r\n        <item>Kirov reg.</item>\r\n        <item>Komi</item>\r\n        <item>Kostroma reg.</item>\r\n        <item>Krasnoyarsk reg.</item>\r\n        <item>Kostroma reg.</item>\r\n        <item>Crimea</item>\r\n        <item>Kurgan reg.</item>\r\n        <item>Kursk reg.</item>\r\n        <item>Lipetsk reg.</item>\r\n        <item>Magadan reg.</item>\r\n        <item>Марий Эл</item>\r\n        <item>Мордовия</item>\r\n        <item>Murmansk reg.</item>\r\n        <item>Nizhny Novgorod reg.</item>\r\n        <item>Novgorod reg.</item>\r\n        <item>Novosibirsk re.</item>\r\n        <item>Omsk reg.</item>\r\n        <item>Orenburg reg.</item>\r\n        <item>Oryol reg.</item>\r\n        <item>Penza reg.</item>\r\n        <item>Perm reg.</item>\r\n        <item>Primorsky reg.</item>\r\n        <item>Pskov reg.</item>\r\n        <item>Ryazan reg.</item>\r\n        <item>Samara reg.</item>\r\n        <item>Saratov reg.</item>\r\n        <item>Sakha(Yakutia)</item>\r\n        <item>Sakhalin reg.</item>\r\n        <item>North Ossetia-Alania</item>\r\n        <item>Sverdlovsk reg.</item>\r\n        <item>Tambov reg.</item>\r\n        <item>Tatarstan</item>\r\n        <item>Tver reg.</item>\r\n        <item>Tomsk reg.</item>\r\n        <item>Tula reg.</item>\r\n        <item>Tyumen reg.</item>\r\n        <item>Udmurtia</item>\r\n        <item>Ulyanovsk reg.</item>\r\n        <item>Khabarovsk reg.</item>\r\n        <item>Хакасия</item>\r\n        <item>Khanty-Mansi Aut.Reg.</item>\r\n        <item>Chelyabinsk reg.</item>\r\n        <item>Chuvashia</item>\r\n        <item>Yamalo-Nenets Aut.Reg.</item>\r\n        <item>Yaroslavl reg.</item>\r\n    </string-array>\r\n    <string-array name=\"region_filter_usa\">\r\n        <item> </item>\r\n        <item>Alabama</item>\r\n        <item>Alaska</item>\r\n        <item>Arizona</item>\r\n        <item>Arkansas</item>\r\n        <item>California</item>\r\n        <item>Colorado</item>\r\n        <item>Connecticut</item>\r\n        <item>Delaware</item>\r\n        <item>Florida</item>\r\n        <item>Georgia</item>\r\n        <item>Hawaii</item>\r\n        <item>Idaho</item>\r\n        <item>Illinois</item>\r\n        <item>Indiana</item>\r\n        <item>Iowa</item>\r\n        <item>Kansas</item>\r\n        <item>Kentucky</item>\r\n        <item>Louisiana</item>\r\n        <item>Maine</item>\r\n        <item>Maryland</item>\r\n        <item>Massachusetts</item>\r\n        <item>Michigan</item>\r\n        <item>Minnesota</item>\r\n        <item>Mississippi</item>\r\n        <item>Missouri</item>\r\n        <item>Montana</item>\r\n        <item>Nebraska</item>\r\n        <item>Nevada</item>\r\n        <item>New Hampshire</item>\r\n        <item>New Jersey</item>\r\n        <item>New Mexico</item>\r\n        <item>New York</item>\r\n        <item>North Carolina</item>\r\n        <item>North Dakota</item>\r\n        <item>Ohio</item>\r\n        <item>Oklahoma</item>\r\n        <item>Oregon</item>\r\n        <item>Pennsylvania</item>\r\n        <item>Rhode Island</item>\r\n        <item>South Carolina</item>\r\n        <item>South Dakota</item>\r\n        <item>Tennessee</item>\r\n        <item>Texas</item>\r\n        <item>Utah</item>\r\n        <item>Vermont</item>\r\n        <item>Virginia</item>\r\n        <item>Washington</item>\r\n        <item>West Virginia</item>\r\n        <item>Wisconsin</item>\r\n        <item>Wyoming</item>\r\n    </string-array>\r\n    <string-array name=\"region_filter_armenia\">\r\n        <item> </item>\r\n        <item>Aragatsotn</item>\r\n        <item>Ararat</item>\r\n        <item>Armavir</item>\r\n        <item>Gegharkunik</item>\r\n        <item>Lori</item>\r\n        <item>Shirak</item>\r\n        <item>Syunik</item>\r\n        <item>Tavush</item>\r\n        <item>Vayots Dzor</item>\r\n    </string-array>\r\n    <string-array name=\"no_region_filter\">\r\n        <item>-</item>\r\n    </string-array>\r\n    <string name=\"dialog_title\">Search</string>\r\n    <string name=\"photo_demands\">\r\n  Photo must be close-up, so that users can clearly see them.\r\n\\n\r\nIt is forbidden to upload photos:\\n\r\n  \\n\r\n - taken from afar\\n\r\n - substandard (with a violation of sharpness, lighting, etc.)\\n\r\n - already existing in the profile or very similar to them\\n\r\n - other people`s \\n\r\n - on which the user is not visible or not at all\\n\r\n - on which the face is poorly visible, or only part of the face is visible\\n\r\n - flowers, animals, insects, landscapes, buildings, structures, etc.\\n\r\n - erotic and pornographic content\\n\r\n - group photos\\n\r\n - baby photos\\n\r\n - irrelevant (made 2 years ago or more)\\n\r\n - in sunglasses\\n\r\n - tilted to the right, left, upside down, in profile\\n\r\n - parts of the user`s body (arms, legs, lips, back, etc.)\\n\r\n - containing scenes of violence\\n\r\n - containing advertisements\\n\r\n - non-original (frames, inscriptions, hearts, flowers, etc.)\\n\r\n - black and white photos\\n\r\n\\n\r\nPhotos that do not meet the above requirements will be deleted by the Administration, and the account will be blocked until valid photos are uploaded. For re-uploading previously rejected photos, your account will be blocked for a period of 3 days.\\n\r\n    </string>\r\n    <string name=\"accept_string\">Are you sure you want to delete your account?</string>\r\n    <string name=\"accept_unblock_string\">Are you sure you want to unblock this account?</string>\r\n    <string name=\"no_neg_button_text\">No</string>\r\n    <string name=\"yes_pos_button_text\">Yes</string>\r\n    <string name=\"edit_message\">Edit message</string>\r\n    <string name=\"delete_my_message\">Delete for yourself</string>\r\n    <string name=\"delete_all_message\">Delete for everyone</string>\r\n    <string name=\"accept_msg_string\">Are you sure you want to delete this message?</string>\r\n    <string name=\"edit_message_title\">Edit</string>\r\n    <string name=\"typing\">typing...</string>\r\n    <string name=\"favorite_chat\">Add in favorites</string>\r\n    <string name=\"favoritelist\">Favorites</string>\r\n    <string name=\"unfavorite_msg_text\">Delete from favorite?</string>\r\n    <string name=\"list_block_admin\">Time-blocked by admin</string>\r\n    <string name=\"perm_block_account\">Permanent block</string>\r\n    <string name=\"verified\">Confirm account</string>\r\n    <string name=\"cancel_verified\">Cancel verify</string>\r\n    <string name=\"perm_block_account_title\">Permanent blocked</string>\r\n    <string name=\"unblock_account_perm\">Unblock account (permanent)</string>\r\n    <string name=\"date_birth\">Add age</string>\r\n    <string name=\"go_chat_btn_title\">Write to administration</string>\r\n    <string name=\"go_complain_btn_title\">Complain</string>\r\n    <string name=\"complain_completed\">the complaint was successfully sent</string>\r\n    <string name=\"advertising_title\">Advertising of goods and services</string>\r\n    <string name=\"fishing_title\">Fishing</string>\r\n    <string name=\"illegal_substance_title\">Sale of illegal drugs</string>\r\n    <string name=\"obscene_content_title\">Intimacy services</string>\r\n    <string name=\"extrimism_title\">Extremism or nationalism</string>\r\n    <string name=\"pornographic_content_title\">Pornographic content</string>\r\n    <string name=\"illegal_photos_title\">Invalid photos in profile</string>\r\n    <string name=\"underage\">Underage user</string>\r\n    <string name=\"fake_profile_title\">Fake profile</string>\r\n    <string name=\"false_age\">Age</string>\r\n    <string name=\"false_location\">Wrong location</string>\r\n    <string name=\"married\">Married</string>\r\n    <string name=\"threats_title\">Threats or insults</string>\r\n    <string name=\"another_reason_title\">Another</string>\r\n    <string name=\"wrong\">Wrong:</string>\r\n    <string name=\"false_country\">Country</string>\r\n    <string name=\"false_city\">City</string>\r\n    <string name=\"false_country_and_country\">Country and city</string>\r\n    <string name=\"false_name\">Name</string>\r\n\r\n    <string name=\"complaint_beginning\">Complaint!\\n Subject: </string>\r\n    <string name=\"complaint_ending\">\\n Name: </string>\r\n\r\n    <string name=\"complaint_id\" translatable=\"false\"> \\n id: </string>\r\n    <string name=\"was\">was</string>\r\n    <string name=\"in\">in</string>\r\n    <string name=\"sure_block_user\">Block user </string>\r\n    <string name=\"sure_delete_user\">Are you sure want to delete chat with</string>\r\n    <string name=\"far_photo\">Taken from afar</string>\r\n    <string name=\"substandard\">Substandard (with a violation of sharpness, lighting, etc.)</string>\r\n    <string name=\"already_existing\">Already existing in the profile or very similar to them</string>\r\n    <string name=\"other_people\">Other people`s</string>\r\n    <string name=\"not_visible_user\">On which the user is not visible or not at all</string>\r\n    <string name=\"poorly_visible\">On which the face is poorly visible, or only part of the face is visible</string>\r\n    <string name=\"any_things\">Flowers, animals, insects, landscapes, buildings, structures, etc.</string>\r\n    <string name=\"porno_photo\">Erotic and pornographic content</string>\r\n    <string name=\"group_photos\">Group photos</string>\r\n    <string name=\"baby_photos\">Baby photos</string>\r\n    <string name=\"irrelevant\">Irrelevant (made 2 years ago or more)</string>\r\n    <string name=\"in_sunglasses\">In sunglasses</string>\r\n    <string name=\"tilted_in_profile\">Tilted to the right, left, upside down, in profile</string>\r\n    <string name=\"parts_of_user\">Parts of the user`s body (arms, legs, lips, back, etc.)</string>\r\n    <string name=\"containing_scenes\">Containing scenes of violence</string>\r\n    <string name=\"non_original\">Non-original (frames, inscriptions, hearts, flowers, etc.)</string>\r\n    <string name=\"black_and_white_photos\">Black and white photos</string>\r\n    <string name=\"illegal_photos\">Illegal photo:</string>\r\n    <string name=\"delete_image\">Delete photo</string>\r\n    <string name=\"impossible_main_photo\">You can not delete main photo, only update in account</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision 697d434c686da1b93740acf19dc89a5a40324a19)
+++ app/src/main/res/values/strings.xml	(date 1609855444686)
@@ -728,4 +728,6 @@
     <string name="illegal_photos">Illegal photo:</string>
     <string name="delete_image">Delete photo</string>
     <string name="impossible_main_photo">You can not delete main photo, only update in account</string>
+    <string name="blocked_by_admin_on_chatlist_title">This user has been blocked by admin</string>
+    <string name="perm_blocked_by_admin_on_chatlist_title">this user is permanently blocked</string>
 </resources>
\ No newline at end of file
